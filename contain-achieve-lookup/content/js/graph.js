/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 121.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 7.0], [2.3, 7.0], [2.4, 7.0], [2.5, 7.0], [2.6, 7.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 8.0], [17.4, 8.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 8.0], [18.4, 8.0], [18.5, 8.0], [18.6, 8.0], [18.7, 8.0], [18.8, 8.0], [18.9, 8.0], [19.0, 8.0], [19.1, 8.0], [19.2, 8.0], [19.3, 8.0], [19.4, 8.0], [19.5, 8.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 8.0], [38.7, 8.0], [38.8, 8.0], [38.9, 8.0], [39.0, 8.0], [39.1, 8.0], [39.2, 8.0], [39.3, 8.0], [39.4, 8.0], [39.5, 8.0], [39.6, 8.0], [39.7, 8.0], [39.8, 8.0], [39.9, 8.0], [40.0, 8.0], [40.1, 8.0], [40.2, 8.0], [40.3, 8.0], [40.4, 8.0], [40.5, 8.0], [40.6, 8.0], [40.7, 8.0], [40.8, 8.0], [40.9, 8.0], [41.0, 8.0], [41.1, 8.0], [41.2, 8.0], [41.3, 8.0], [41.4, 8.0], [41.5, 8.0], [41.6, 8.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 9.0], [43.8, 9.0], [43.9, 9.0], [44.0, 9.0], [44.1, 9.0], [44.2, 9.0], [44.3, 9.0], [44.4, 9.0], [44.5, 9.0], [44.6, 9.0], [44.7, 9.0], [44.8, 9.0], [44.9, 9.0], [45.0, 9.0], [45.1, 9.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 9.0], [50.6, 9.0], [50.7, 9.0], [50.8, 9.0], [50.9, 9.0], [51.0, 9.0], [51.1, 9.0], [51.2, 9.0], [51.3, 9.0], [51.4, 9.0], [51.5, 9.0], [51.6, 9.0], [51.7, 9.0], [51.8, 9.0], [51.9, 9.0], [52.0, 9.0], [52.1, 9.0], [52.2, 9.0], [52.3, 9.0], [52.4, 9.0], [52.5, 9.0], [52.6, 9.0], [52.7, 9.0], [52.8, 9.0], [52.9, 9.0], [53.0, 9.0], [53.1, 9.0], [53.2, 9.0], [53.3, 9.0], [53.4, 9.0], [53.5, 9.0], [53.6, 9.0], [53.7, 9.0], [53.8, 9.0], [53.9, 9.0], [54.0, 9.0], [54.1, 9.0], [54.2, 9.0], [54.3, 9.0], [54.4, 9.0], [54.5, 9.0], [54.6, 9.0], [54.7, 9.0], [54.8, 9.0], [54.9, 9.0], [55.0, 9.0], [55.1, 9.0], [55.2, 9.0], [55.3, 9.0], [55.4, 9.0], [55.5, 9.0], [55.6, 9.0], [55.7, 9.0], [55.8, 9.0], [55.9, 9.0], [56.0, 9.0], [56.1, 9.0], [56.2, 9.0], [56.3, 9.0], [56.4, 9.0], [56.5, 9.0], [56.6, 9.0], [56.7, 9.0], [56.8, 9.0], [56.9, 9.0], [57.0, 9.0], [57.1, 9.0], [57.2, 9.0], [57.3, 9.0], [57.4, 9.0], [57.5, 9.0], [57.6, 9.0], [57.7, 9.0], [57.8, 9.0], [57.9, 9.0], [58.0, 9.0], [58.1, 9.0], [58.2, 9.0], [58.3, 9.0], [58.4, 9.0], [58.5, 9.0], [58.6, 9.0], [58.7, 9.0], [58.8, 9.0], [58.9, 9.0], [59.0, 9.0], [59.1, 9.0], [59.2, 9.0], [59.3, 9.0], [59.4, 9.0], [59.5, 9.0], [59.6, 9.0], [59.7, 9.0], [59.8, 9.0], [59.9, 9.0], [60.0, 9.0], [60.1, 9.0], [60.2, 9.0], [60.3, 9.0], [60.4, 9.0], [60.5, 9.0], [60.6, 9.0], [60.7, 9.0], [60.8, 9.0], [60.9, 9.0], [61.0, 9.0], [61.1, 9.0], [61.2, 9.0], [61.3, 9.0], [61.4, 9.0], [61.5, 9.0], [61.6, 9.0], [61.7, 9.0], [61.8, 9.0], [61.9, 9.0], [62.0, 9.0], [62.1, 9.0], [62.2, 9.0], [62.3, 9.0], [62.4, 9.0], [62.5, 9.0], [62.6, 9.0], [62.7, 9.0], [62.8, 9.0], [62.9, 9.0], [63.0, 9.0], [63.1, 9.0], [63.2, 9.0], [63.3, 9.0], [63.4, 9.0], [63.5, 9.0], [63.6, 9.0], [63.7, 9.0], [63.8, 9.0], [63.9, 9.0], [64.0, 9.0], [64.1, 9.0], [64.2, 9.0], [64.3, 9.0], [64.4, 9.0], [64.5, 9.0], [64.6, 9.0], [64.7, 9.0], [64.8, 9.0], [64.9, 9.0], [65.0, 9.0], [65.1, 9.0], [65.2, 9.0], [65.3, 9.0], [65.4, 9.0], [65.5, 9.0], [65.6, 9.0], [65.7, 9.0], [65.8, 9.0], [65.9, 9.0], [66.0, 9.0], [66.1, 9.0], [66.2, 9.0], [66.3, 9.0], [66.4, 9.0], [66.5, 9.0], [66.6, 9.0], [66.7, 9.0], [66.8, 9.0], [66.9, 9.0], [67.0, 9.0], [67.1, 9.0], [67.2, 9.0], [67.3, 9.0], [67.4, 9.0], [67.5, 9.0], [67.6, 9.0], [67.7, 9.0], [67.8, 9.0], [67.9, 9.0], [68.0, 9.0], [68.1, 9.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 9.0], [68.8, 9.0], [68.9, 9.0], [69.0, 9.0], [69.1, 9.0], [69.2, 10.0], [69.3, 10.0], [69.4, 10.0], [69.5, 10.0], [69.6, 10.0], [69.7, 10.0], [69.8, 10.0], [69.9, 10.0], [70.0, 10.0], [70.1, 10.0], [70.2, 10.0], [70.3, 10.0], [70.4, 10.0], [70.5, 10.0], [70.6, 10.0], [70.7, 10.0], [70.8, 10.0], [70.9, 10.0], [71.0, 10.0], [71.1, 10.0], [71.2, 10.0], [71.3, 10.0], [71.4, 10.0], [71.5, 10.0], [71.6, 10.0], [71.7, 10.0], [71.8, 10.0], [71.9, 10.0], [72.0, 10.0], [72.1, 10.0], [72.2, 10.0], [72.3, 10.0], [72.4, 10.0], [72.5, 10.0], [72.6, 10.0], [72.7, 10.0], [72.8, 10.0], [72.9, 10.0], [73.0, 10.0], [73.1, 10.0], [73.2, 10.0], [73.3, 10.0], [73.4, 10.0], [73.5, 10.0], [73.6, 10.0], [73.7, 10.0], [73.8, 10.0], [73.9, 10.0], [74.0, 10.0], [74.1, 10.0], [74.2, 10.0], [74.3, 10.0], [74.4, 10.0], [74.5, 10.0], [74.6, 10.0], [74.7, 10.0], [74.8, 10.0], [74.9, 10.0], [75.0, 10.0], [75.1, 10.0], [75.2, 10.0], [75.3, 10.0], [75.4, 10.0], [75.5, 10.0], [75.6, 10.0], [75.7, 10.0], [75.8, 10.0], [75.9, 10.0], [76.0, 10.0], [76.1, 10.0], [76.2, 10.0], [76.3, 10.0], [76.4, 10.0], [76.5, 10.0], [76.6, 10.0], [76.7, 10.0], [76.8, 10.0], [76.9, 10.0], [77.0, 10.0], [77.1, 10.0], [77.2, 10.0], [77.3, 10.0], [77.4, 10.0], [77.5, 10.0], [77.6, 10.0], [77.7, 10.0], [77.8, 10.0], [77.9, 10.0], [78.0, 10.0], [78.1, 10.0], [78.2, 10.0], [78.3, 10.0], [78.4, 10.0], [78.5, 10.0], [78.6, 10.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 10.0], [79.3, 10.0], [79.4, 10.0], [79.5, 10.0], [79.6, 10.0], [79.7, 10.0], [79.8, 10.0], [79.9, 10.0], [80.0, 10.0], [80.1, 10.0], [80.2, 10.0], [80.3, 10.0], [80.4, 10.0], [80.5, 10.0], [80.6, 10.0], [80.7, 10.0], [80.8, 10.0], [80.9, 10.0], [81.0, 10.0], [81.1, 10.0], [81.2, 10.0], [81.3, 10.0], [81.4, 10.0], [81.5, 10.0], [81.6, 10.0], [81.7, 10.0], [81.8, 10.0], [81.9, 10.0], [82.0, 10.0], [82.1, 10.0], [82.2, 10.0], [82.3, 10.0], [82.4, 10.0], [82.5, 10.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 10.0], [84.1, 10.0], [84.2, 10.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 11.0], [86.5, 11.0], [86.6, 11.0], [86.7, 11.0], [86.8, 11.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 11.0], [90.2, 11.0], [90.3, 11.0], [90.4, 11.0], [90.5, 11.0], [90.6, 11.0], [90.7, 11.0], [90.8, 11.0], [90.9, 11.0], [91.0, 11.0], [91.1, 11.0], [91.2, 11.0], [91.3, 11.0], [91.4, 11.0], [91.5, 11.0], [91.6, 11.0], [91.7, 11.0], [91.8, 11.0], [91.9, 11.0], [92.0, 11.0], [92.1, 11.0], [92.2, 11.0], [92.3, 11.0], [92.4, 11.0], [92.5, 11.0], [92.6, 11.0], [92.7, 11.0], [92.8, 11.0], [92.9, 11.0], [93.0, 11.0], [93.1, 11.0], [93.2, 11.0], [93.3, 11.0], [93.4, 11.0], [93.5, 11.0], [93.6, 11.0], [93.7, 11.0], [93.8, 11.0], [93.9, 12.0], [94.0, 12.0], [94.1, 12.0], [94.2, 12.0], [94.3, 12.0], [94.4, 12.0], [94.5, 12.0], [94.6, 12.0], [94.7, 12.0], [94.8, 12.0], [94.9, 12.0], [95.0, 12.0], [95.1, 12.0], [95.2, 12.0], [95.3, 12.0], [95.4, 12.0], [95.5, 12.0], [95.6, 12.0], [95.7, 12.0], [95.8, 12.0], [95.9, 12.0], [96.0, 12.0], [96.1, 12.0], [96.2, 12.0], [96.3, 12.0], [96.4, 12.0], [96.5, 12.0], [96.6, 12.0], [96.7, 12.0], [96.8, 12.0], [96.9, 12.0], [97.0, 12.0], [97.1, 12.0], [97.2, 12.0], [97.3, 12.0], [97.4, 12.0], [97.5, 13.0], [97.6, 13.0], [97.7, 13.0], [97.8, 13.0], [97.9, 13.0], [98.0, 13.0], [98.1, 13.0], [98.2, 13.0], [98.3, 13.0], [98.4, 13.0], [98.5, 13.0], [98.6, 13.0], [98.7, 13.0], [98.8, 14.0], [98.9, 14.0], [99.0, 14.0], [99.1, 14.0], [99.2, 14.0], [99.3, 14.0], [99.4, 15.0], [99.5, 15.0], [99.6, 15.0], [99.7, 16.0], [99.8, 20.0], [99.9, 25.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 4.0], [45.7, 4.0], [45.8, 4.0], [45.9, 4.0], [46.0, 4.0], [46.1, 4.0], [46.2, 4.0], [46.3, 4.0], [46.4, 4.0], [46.5, 4.0], [46.6, 4.0], [46.7, 4.0], [46.8, 4.0], [46.9, 4.0], [47.0, 4.0], [47.1, 4.0], [47.2, 4.0], [47.3, 4.0], [47.4, 4.0], [47.5, 4.0], [47.6, 4.0], [47.7, 4.0], [47.8, 4.0], [47.9, 4.0], [48.0, 4.0], [48.1, 4.0], [48.2, 4.0], [48.3, 4.0], [48.4, 4.0], [48.5, 4.0], [48.6, 4.0], [48.7, 4.0], [48.8, 4.0], [48.9, 4.0], [49.0, 4.0], [49.1, 4.0], [49.2, 4.0], [49.3, 4.0], [49.4, 4.0], [49.5, 4.0], [49.6, 4.0], [49.7, 4.0], [49.8, 4.0], [49.9, 4.0], [50.0, 4.0], [50.1, 4.0], [50.2, 4.0], [50.3, 4.0], [50.4, 4.0], [50.5, 4.0], [50.6, 4.0], [50.7, 4.0], [50.8, 4.0], [50.9, 4.0], [51.0, 4.0], [51.1, 4.0], [51.2, 4.0], [51.3, 4.0], [51.4, 4.0], [51.5, 4.0], [51.6, 4.0], [51.7, 4.0], [51.8, 4.0], [51.9, 4.0], [52.0, 4.0], [52.1, 4.0], [52.2, 4.0], [52.3, 4.0], [52.4, 4.0], [52.5, 4.0], [52.6, 4.0], [52.7, 4.0], [52.8, 4.0], [52.9, 4.0], [53.0, 4.0], [53.1, 4.0], [53.2, 4.0], [53.3, 4.0], [53.4, 4.0], [53.5, 4.0], [53.6, 4.0], [53.7, 4.0], [53.8, 4.0], [53.9, 4.0], [54.0, 4.0], [54.1, 4.0], [54.2, 4.0], [54.3, 4.0], [54.4, 4.0], [54.5, 4.0], [54.6, 4.0], [54.7, 4.0], [54.8, 4.0], [54.9, 4.0], [55.0, 4.0], [55.1, 4.0], [55.2, 4.0], [55.3, 4.0], [55.4, 4.0], [55.5, 4.0], [55.6, 4.0], [55.7, 4.0], [55.8, 4.0], [55.9, 4.0], [56.0, 4.0], [56.1, 4.0], [56.2, 4.0], [56.3, 4.0], [56.4, 4.0], [56.5, 4.0], [56.6, 4.0], [56.7, 4.0], [56.8, 4.0], [56.9, 4.0], [57.0, 4.0], [57.1, 4.0], [57.2, 4.0], [57.3, 4.0], [57.4, 4.0], [57.5, 4.0], [57.6, 4.0], [57.7, 4.0], [57.8, 4.0], [57.9, 4.0], [58.0, 4.0], [58.1, 4.0], [58.2, 4.0], [58.3, 4.0], [58.4, 4.0], [58.5, 4.0], [58.6, 4.0], [58.7, 5.0], [58.8, 5.0], [58.9, 5.0], [59.0, 5.0], [59.1, 5.0], [59.2, 5.0], [59.3, 5.0], [59.4, 5.0], [59.5, 5.0], [59.6, 5.0], [59.7, 5.0], [59.8, 5.0], [59.9, 5.0], [60.0, 5.0], [60.1, 5.0], [60.2, 5.0], [60.3, 5.0], [60.4, 5.0], [60.5, 5.0], [60.6, 5.0], [60.7, 5.0], [60.8, 5.0], [60.9, 5.0], [61.0, 5.0], [61.1, 5.0], [61.2, 5.0], [61.3, 5.0], [61.4, 5.0], [61.5, 5.0], [61.6, 5.0], [61.7, 5.0], [61.8, 5.0], [61.9, 5.0], [62.0, 5.0], [62.1, 5.0], [62.2, 5.0], [62.3, 5.0], [62.4, 5.0], [62.5, 5.0], [62.6, 5.0], [62.7, 5.0], [62.8, 5.0], [62.9, 5.0], [63.0, 5.0], [63.1, 5.0], [63.2, 5.0], [63.3, 5.0], [63.4, 5.0], [63.5, 5.0], [63.6, 5.0], [63.7, 5.0], [63.8, 5.0], [63.9, 5.0], [64.0, 5.0], [64.1, 5.0], [64.2, 5.0], [64.3, 5.0], [64.4, 5.0], [64.5, 5.0], [64.6, 5.0], [64.7, 5.0], [64.8, 5.0], [64.9, 5.0], [65.0, 5.0], [65.1, 5.0], [65.2, 5.0], [65.3, 5.0], [65.4, 5.0], [65.5, 5.0], [65.6, 5.0], [65.7, 5.0], [65.8, 5.0], [65.9, 5.0], [66.0, 5.0], [66.1, 5.0], [66.2, 5.0], [66.3, 5.0], [66.4, 5.0], [66.5, 5.0], [66.6, 5.0], [66.7, 5.0], [66.8, 5.0], [66.9, 5.0], [67.0, 5.0], [67.1, 5.0], [67.2, 5.0], [67.3, 5.0], [67.4, 5.0], [67.5, 5.0], [67.6, 5.0], [67.7, 5.0], [67.8, 5.0], [67.9, 5.0], [68.0, 5.0], [68.1, 5.0], [68.2, 5.0], [68.3, 5.0], [68.4, 5.0], [68.5, 5.0], [68.6, 5.0], [68.7, 5.0], [68.8, 5.0], [68.9, 5.0], [69.0, 5.0], [69.1, 5.0], [69.2, 5.0], [69.3, 5.0], [69.4, 5.0], [69.5, 5.0], [69.6, 5.0], [69.7, 5.0], [69.8, 5.0], [69.9, 5.0], [70.0, 5.0], [70.1, 5.0], [70.2, 5.0], [70.3, 5.0], [70.4, 5.0], [70.5, 5.0], [70.6, 5.0], [70.7, 5.0], [70.8, 5.0], [70.9, 5.0], [71.0, 5.0], [71.1, 5.0], [71.2, 5.0], [71.3, 5.0], [71.4, 5.0], [71.5, 5.0], [71.6, 5.0], [71.7, 5.0], [71.8, 5.0], [71.9, 5.0], [72.0, 5.0], [72.1, 5.0], [72.2, 5.0], [72.3, 5.0], [72.4, 5.0], [72.5, 5.0], [72.6, 5.0], [72.7, 5.0], [72.8, 5.0], [72.9, 5.0], [73.0, 5.0], [73.1, 5.0], [73.2, 5.0], [73.3, 5.0], [73.4, 5.0], [73.5, 5.0], [73.6, 5.0], [73.7, 5.0], [73.8, 5.0], [73.9, 5.0], [74.0, 5.0], [74.1, 5.0], [74.2, 5.0], [74.3, 5.0], [74.4, 5.0], [74.5, 5.0], [74.6, 5.0], [74.7, 5.0], [74.8, 5.0], [74.9, 5.0], [75.0, 5.0], [75.1, 5.0], [75.2, 5.0], [75.3, 5.0], [75.4, 5.0], [75.5, 5.0], [75.6, 5.0], [75.7, 5.0], [75.8, 5.0], [75.9, 5.0], [76.0, 5.0], [76.1, 5.0], [76.2, 5.0], [76.3, 5.0], [76.4, 5.0], [76.5, 5.0], [76.6, 5.0], [76.7, 5.0], [76.8, 5.0], [76.9, 5.0], [77.0, 5.0], [77.1, 5.0], [77.2, 5.0], [77.3, 5.0], [77.4, 5.0], [77.5, 5.0], [77.6, 5.0], [77.7, 5.0], [77.8, 5.0], [77.9, 5.0], [78.0, 5.0], [78.1, 5.0], [78.2, 5.0], [78.3, 5.0], [78.4, 5.0], [78.5, 5.0], [78.6, 5.0], [78.7, 5.0], [78.8, 5.0], [78.9, 5.0], [79.0, 5.0], [79.1, 5.0], [79.2, 5.0], [79.3, 5.0], [79.4, 5.0], [79.5, 5.0], [79.6, 5.0], [79.7, 5.0], [79.8, 5.0], [79.9, 5.0], [80.0, 5.0], [80.1, 5.0], [80.2, 5.0], [80.3, 5.0], [80.4, 5.0], [80.5, 5.0], [80.6, 5.0], [80.7, 5.0], [80.8, 5.0], [80.9, 5.0], [81.0, 5.0], [81.1, 5.0], [81.2, 5.0], [81.3, 5.0], [81.4, 5.0], [81.5, 5.0], [81.6, 5.0], [81.7, 5.0], [81.8, 5.0], [81.9, 5.0], [82.0, 5.0], [82.1, 5.0], [82.2, 5.0], [82.3, 5.0], [82.4, 5.0], [82.5, 5.0], [82.6, 5.0], [82.7, 5.0], [82.8, 5.0], [82.9, 5.0], [83.0, 5.0], [83.1, 5.0], [83.2, 5.0], [83.3, 5.0], [83.4, 5.0], [83.5, 5.0], [83.6, 5.0], [83.7, 5.0], [83.8, 5.0], [83.9, 5.0], [84.0, 5.0], [84.1, 5.0], [84.2, 5.0], [84.3, 5.0], [84.4, 5.0], [84.5, 5.0], [84.6, 5.0], [84.7, 5.0], [84.8, 5.0], [84.9, 5.0], [85.0, 5.0], [85.1, 5.0], [85.2, 5.0], [85.3, 5.0], [85.4, 5.0], [85.5, 5.0], [85.6, 5.0], [85.7, 5.0], [85.8, 5.0], [85.9, 5.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 5.0], [89.1, 5.0], [89.2, 5.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 5.0], [91.1, 5.0], [91.2, 5.0], [91.3, 5.0], [91.4, 5.0], [91.5, 5.0], [91.6, 5.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 6.0], [92.1, 6.0], [92.2, 6.0], [92.3, 6.0], [92.4, 6.0], [92.5, 6.0], [92.6, 6.0], [92.7, 6.0], [92.8, 6.0], [92.9, 6.0], [93.0, 6.0], [93.1, 6.0], [93.2, 6.0], [93.3, 6.0], [93.4, 6.0], [93.5, 6.0], [93.6, 6.0], [93.7, 6.0], [93.8, 6.0], [93.9, 6.0], [94.0, 6.0], [94.1, 6.0], [94.2, 6.0], [94.3, 6.0], [94.4, 6.0], [94.5, 6.0], [94.6, 6.0], [94.7, 6.0], [94.8, 6.0], [94.9, 6.0], [95.0, 6.0], [95.1, 6.0], [95.2, 6.0], [95.3, 6.0], [95.4, 6.0], [95.5, 6.0], [95.6, 6.0], [95.7, 6.0], [95.8, 6.0], [95.9, 6.0], [96.0, 6.0], [96.1, 6.0], [96.2, 6.0], [96.3, 6.0], [96.4, 6.0], [96.5, 6.0], [96.6, 6.0], [96.7, 6.0], [96.8, 6.0], [96.9, 6.0], [97.0, 6.0], [97.1, 6.0], [97.2, 6.0], [97.3, 6.0], [97.4, 6.0], [97.5, 6.0], [97.6, 6.0], [97.7, 6.0], [97.8, 6.0], [97.9, 6.0], [98.0, 6.0], [98.1, 6.0], [98.2, 6.0], [98.3, 6.0], [98.4, 6.0], [98.5, 6.0], [98.6, 6.0], [98.7, 7.0], [98.8, 7.0], [98.9, 7.0], [99.0, 7.0], [99.1, 7.0], [99.2, 7.0], [99.3, 7.0], [99.4, 7.0], [99.5, 7.0], [99.6, 8.0], [99.7, 8.0], [99.8, 9.0], [99.9, 14.0]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 4.0], [92.1, 4.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 4.0], [93.1, 4.0], [93.2, 4.0], [93.3, 4.0], [93.4, 4.0], [93.5, 4.0], [93.6, 4.0], [93.7, 4.0], [93.8, 4.0], [93.9, 4.0], [94.0, 4.0], [94.1, 4.0], [94.2, 4.0], [94.3, 4.0], [94.4, 4.0], [94.5, 4.0], [94.6, 4.0], [94.7, 4.0], [94.8, 4.0], [94.9, 4.0], [95.0, 4.0], [95.1, 4.0], [95.2, 4.0], [95.3, 4.0], [95.4, 4.0], [95.5, 4.0], [95.6, 4.0], [95.7, 4.0], [95.8, 4.0], [95.9, 4.0], [96.0, 4.0], [96.1, 4.0], [96.2, 4.0], [96.3, 4.0], [96.4, 4.0], [96.5, 4.0], [96.6, 4.0], [96.7, 4.0], [96.8, 4.0], [96.9, 4.0], [97.0, 4.0], [97.1, 4.0], [97.2, 4.0], [97.3, 4.0], [97.4, 4.0], [97.5, 4.0], [97.6, 4.0], [97.7, 4.0], [97.8, 4.0], [97.9, 4.0], [98.0, 5.0], [98.1, 5.0], [98.2, 5.0], [98.3, 5.0], [98.4, 5.0], [98.5, 5.0], [98.6, 5.0], [98.7, 5.0], [98.8, 5.0], [98.9, 5.0], [99.0, 5.0], [99.1, 5.0], [99.2, 5.0], [99.3, 5.0], [99.4, 5.0], [99.5, 5.0], [99.6, 5.0], [99.7, 5.0], [99.8, 6.0], [99.9, 6.0], [100.0, 33.0]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10000.0, "series": [{"data": [[0.0, 4999.0], [100.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 4999.0], [100.0, 1.0]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[0.0, 10000.0]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 1,000ms"], [1, "Requests having \nresponse time > 1,000ms and <= 3,000ms"], [2, "Requests having \nresponse time > 3,000ms"], [3, "Requests in error"]], "maxY": 15000.0, "series": [{"data": [[0.0, 15000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 1,000ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms and <= 3,000ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 3,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.586701766E12, "maxY": 1.0, "series": [{"data": [[1.586701806E12, 1.0], [1.586701847E12, 1.0], [1.586701769E12, 1.0], [1.586701855E12, 1.0], [1.586701851E12, 1.0], [1.58670181E12, 1.0], [1.586701859E12, 1.0], [1.586701818E12, 1.0], [1.586701814E12, 1.0], [1.586701773E12, 1.0], [1.586701822E12, 1.0], [1.586701781E12, 1.0], [1.586701777E12, 1.0], [1.586701863E12, 1.0], [1.586701827E12, 1.0], [1.586701786E12, 1.0], [1.586701782E12, 1.0], [1.58670179E12, 1.0], [1.586701831E12, 1.0], [1.586701839E12, 1.0], [1.586701835E12, 1.0], [1.586701794E12, 1.0], [1.586701843E12, 1.0], [1.586701802E12, 1.0], [1.586701798E12, 1.0], [1.586701807E12, 1.0], [1.586701803E12, 1.0], [1.586701848E12, 1.0], [1.586701811E12, 1.0], [1.58670177E12, 1.0], [1.586701856E12, 1.0], [1.586701766E12, 1.0], [1.586701852E12, 1.0], [1.586701774E12, 1.0], [1.58670186E12, 1.0], [1.586701815E12, 1.0], [1.586701823E12, 1.0], [1.586701819E12, 1.0], [1.586701778E12, 1.0], [1.586701864E12, 1.0], [1.586701828E12, 1.0], [1.586701783E12, 1.0], [1.586701791E12, 1.0], [1.586701787E12, 1.0], [1.586701832E12, 1.0], [1.586701795E12, 1.0], [1.58670184E12, 1.0], [1.586701836E12, 1.0], [1.586701844E12, 1.0], [1.586701799E12, 1.0], [1.586701849E12, 1.0], [1.586701808E12, 1.0], [1.586701804E12, 1.0], [1.586701812E12, 1.0], [1.586701767E12, 1.0], [1.586701853E12, 1.0], [1.586701775E12, 1.0], [1.586701861E12, 1.0], [1.586701771E12, 1.0], [1.586701857E12, 1.0], [1.586701816E12, 1.0], [1.586701779E12, 1.0], [1.586701865E12, 1.0], [1.586701824E12, 1.0], [1.58670182E12, 1.0], [1.586701829E12, 1.0], [1.586701825E12, 1.0], [1.586701784E12, 1.0], [1.586701833E12, 1.0], [1.586701792E12, 1.0], [1.586701788E12, 1.0], [1.586701796E12, 1.0], [1.586701837E12, 1.0], [1.586701845E12, 1.0], [1.586701841E12, 1.0], [1.5867018E12, 1.0], [1.58670185E12, 1.0], [1.586701846E12, 1.0], [1.586701805E12, 1.0], [1.586701854E12, 1.0], [1.586701813E12, 1.0], [1.586701809E12, 1.0], [1.586701768E12, 1.0], [1.586701817E12, 1.0], [1.586701776E12, 1.0], [1.586701772E12, 1.0], [1.586701858E12, 1.0], [1.58670178E12, 1.0], [1.586701866E12, 1.0], [1.586701862E12, 1.0], [1.586701821E12, 1.0], [1.586701785E12, 1.0], [1.586701826E12, 1.0], [1.586701834E12, 1.0], [1.58670183E12, 1.0], [1.586701789E12, 1.0], [1.586701838E12, 1.0], [1.586701797E12, 1.0], [1.586701793E12, 1.0], [1.586701801E12, 1.0], [1.586701842E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.586701866E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.279199999999996, "minX": 1.0, "maxY": 9.033999999999981, "series": [{"data": [[1.0, 9.033999999999981]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.0, 9.033999999999981]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[1.0, 4.4754000000000005]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[1.0, 4.4754000000000005]], "isOverall": false, "label": "http://localhost:8080/Device/Search-Aggregated", "isController": false}, {"data": [[1.0, 2.279199999999996]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}, {"data": [[1.0, 2.279199999999996]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8484.0, "minX": 1.586701766E12, "maxY": 145948.0, "series": [{"data": [[1.586701806E12, 112992.0], [1.586701847E12, 115915.0], [1.586701769E12, 124762.0], [1.586701855E12, 112992.0], [1.586701851E12, 115915.0], [1.58670181E12, 122408.0], [1.586701859E12, 116900.0], [1.586701818E12, 117700.0], [1.586701814E12, 123208.0], [1.586701773E12, 119254.0], [1.586701822E12, 122408.0], [1.586701781E12, 122408.0], [1.586701777E12, 124762.0], [1.586701863E12, 115915.0], [1.586701827E12, 108284.0], [1.586701786E12, 112992.0], [1.586701782E12, 113561.0], [1.58670179E12, 131024.0], [1.586701831E12, 113561.0], [1.586701839E12, 113561.0], [1.586701835E12, 118269.0], [1.586701794E12, 110069.0], [1.586701843E12, 110638.0], [1.586701802E12, 116146.0], [1.586701798E12, 129470.0], [1.586701807E12, 120054.0], [1.586701803E12, 110638.0], [1.586701848E12, 108284.0], [1.586701811E12, 115346.0], [1.58670177E12, 110638.0], [1.586701856E12, 117131.0], [1.586701766E12, 10216.0], [1.586701852E12, 120054.0], [1.586701774E12, 115577.0], [1.58670186E12, 108515.0], [1.586701815E12, 115346.0], [1.586701823E12, 119485.0], [1.586701819E12, 118500.0], [1.586701778E12, 117700.0], [1.586701864E12, 120054.0], [1.586701828E12, 127685.0], [1.586701783E12, 123962.0], [1.586701791E12, 117700.0], [1.586701787E12, 120623.0], [1.586701832E12, 122408.0], [1.586701795E12, 127685.0], [1.58670184E12, 122408.0], [1.586701836E12, 108284.0], [1.586701844E12, 124531.0], [1.586701799E12, 112992.0], [1.586701849E12, 119485.0], [1.586701808E12, 116146.0], [1.586701804E12, 126547.0], [1.586701812E12, 105930.0], [1.586701767E12, 145948.0], [1.586701853E12, 117700.0], [1.586701775E12, 118269.0], [1.586701861E12, 122408.0], [1.586701771E12, 115346.0], [1.586701857E12, 118269.0], [1.586701816E12, 121839.0], [1.586701779E12, 117700.0], [1.586701865E12, 117700.0], [1.586701824E12, 97083.0], [1.58670182E12, 121608.0], [1.586701829E12, 117700.0], [1.586701825E12, 133609.0], [1.586701784E12, 117700.0], [1.586701833E12, 114546.0], [1.586701792E12, 117931.0], [1.586701788E12, 110638.0], [1.586701796E12, 116900.0], [1.586701837E12, 121608.0], [1.586701845E12, 111438.0], [1.586701841E12, 115346.0], [1.5867018E12, 117700.0], [1.58670185E12, 122408.0], [1.586701846E12, 124193.0], [1.586701805E12, 117469.0], [1.586701854E12, 117700.0], [1.586701813E12, 126316.0], [1.586701809E12, 112992.0], [1.586701768E12, 117700.0], [1.586701817E12, 112761.0], [1.586701776E12, 112992.0], [1.586701772E12, 122408.0], [1.586701858E12, 122408.0], [1.58670178E12, 112423.0], [1.586701866E12, 79236.0], [1.586701862E12, 122408.0], [1.586701821E12, 111438.0], [1.586701785E12, 117931.0], [1.586701826E12, 122408.0], [1.586701834E12, 120285.0], [1.58670183E12, 117131.0], [1.586701789E12, 112992.0], [1.586701838E12, 122639.0], [1.586701797E12, 102022.0], [1.586701793E12, 115915.0], [1.586701801E12, 126316.0], [1.586701842E12, 119485.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.586701806E12, 88992.0], [1.586701847E12, 91541.0], [1.586701769E12, 98233.0], [1.586701855E12, 88992.0], [1.586701851E12, 91541.0], [1.58670181E12, 96408.0], [1.586701859E12, 91632.0], [1.586701818E12, 92700.0], [1.586701814E12, 97476.0], [1.586701773E12, 93486.0], [1.586701822E12, 96408.0], [1.586701781E12, 96408.0], [1.586701777E12, 98262.0], [1.586701863E12, 91541.0], [1.586701827E12, 85255.0], [1.586701786E12, 88992.0], [1.586701782E12, 89687.0], [1.58670179E12, 102727.0], [1.586701831E12, 89687.0], [1.586701839E12, 89687.0], [1.586701835E12, 93395.0], [1.586701794E12, 86443.0], [1.586701843E12, 87138.0], [1.586701802E12, 91914.0], [1.586701798E12, 101970.0], [1.586701807E12, 94554.0], [1.586701803E12, 87138.0], [1.586701848E12, 85255.0], [1.586701811E12, 90846.0], [1.58670177E12, 87109.0], [1.586701856E12, 92005.0], [1.586701766E12, 8484.0], [1.586701852E12, 94496.0], [1.586701774E12, 91161.0], [1.58670186E12, 85657.0], [1.586701815E12, 90846.0], [1.586701823E12, 93859.0], [1.586701819E12, 93739.0], [1.586701778E12, 92671.0], [1.586701864E12, 94554.0], [1.586701828E12, 100782.0], [1.586701783E12, 97194.0], [1.586701791E12, 92671.0], [1.586701787E12, 95220.0], [1.586701832E12, 96408.0], [1.586701795E12, 100753.0], [1.58670184E12, 96408.0], [1.586701836E12, 85284.0], [1.586701844E12, 97889.0], [1.586701799E12, 88992.0], [1.586701849E12, 93859.0], [1.586701808E12, 91885.0], [1.586701804E12, 99421.0], [1.586701812E12, 83430.0], [1.586701767E12, 114890.0], [1.586701853E12, 92700.0], [1.586701775E12, 93395.0], [1.586701861E12, 96408.0], [1.586701771E12, 90817.0], [1.586701857E12, 93395.0], [1.586701816E12, 95684.0], [1.586701779E12, 92700.0], [1.586701865E12, 92700.0], [1.586701824E12, 76709.0], [1.58670182E12, 95340.0], [1.586701829E12, 92700.0], [1.586701825E12, 104983.0], [1.586701784E12, 92671.0], [1.586701833E12, 89778.0], [1.586701792E12, 93073.0], [1.586701788E12, 87138.0], [1.586701796E12, 91632.0], [1.586701837E12, 95340.0], [1.586701845E12, 88206.0], [1.586701841E12, 90846.0], [1.5867018E12, 92671.0], [1.58670185E12, 96408.0], [1.586701846E12, 97567.0], [1.586701805E12, 92327.0], [1.586701854E12, 92700.0], [1.586701813E12, 99019.0], [1.586701809E12, 88992.0], [1.586701768E12, 92700.0], [1.586701817E12, 88619.0], [1.586701776E12, 88963.0], [1.586701772E12, 96379.0], [1.586701858E12, 96408.0], [1.58670178E12, 88268.0], [1.586701866E12, 61968.0], [1.586701862E12, 96408.0], [1.586701821E12, 88206.0], [1.586701785E12, 93073.0], [1.586701826E12, 96408.0], [1.586701834E12, 94927.0], [1.58670183E12, 92005.0], [1.586701789E12, 88963.0], [1.586701838E12, 96781.0], [1.586701797E12, 80790.0], [1.586701793E12, 91512.0], [1.586701801E12, 99019.0], [1.586701842E12, 93859.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.586701866E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.8699999999999997, "minX": 1.586701766E12, "maxY": 17.4, "series": [{"data": [[1.586701806E12, 9.104166666666664], [1.586701847E12, 8.319999999999997], [1.586701769E12, 9.094339622641511], [1.586701855E12, 8.77083333333333], [1.586701851E12, 8.387755102040813], [1.58670181E12, 9.442307692307693], [1.586701859E12, 8.180000000000001], [1.586701818E12, 9.780000000000006], [1.586701814E12, 8.076923076923078], [1.586701773E12, 9.137254901960784], [1.586701822E12, 9.211538461538462], [1.586701781E12, 8.71153846153846], [1.586701777E12, 9.132075471698114], [1.586701863E12, 8.63265306122449], [1.586701827E12, 8.695652173913041], [1.586701786E12, 9.291666666666666], [1.586701782E12, 10.27083333333333], [1.58670179E12, 8.464285714285714], [1.586701831E12, 9.937500000000002], [1.586701839E12, 8.326530612244898], [1.586701835E12, 7.860000000000003], [1.586701794E12, 9.14893617021277], [1.586701843E12, 9.276595744680854], [1.586701802E12, 8.239999999999998], [1.586701798E12, 9.61818181818182], [1.586701807E12, 9.372549019607842], [1.586701803E12, 9.282608695652174], [1.586701848E12, 10.044444444444446], [1.586701811E12, 9.979591836734695], [1.58670177E12, 10.404255319148936], [1.586701856E12, 7.819999999999999], [1.586701766E12, 17.4], [1.586701852E12, 9.019607843137253], [1.586701774E12, 9.36734693877551], [1.58670186E12, 10.195652173913041], [1.586701815E12, 8.673469387755105], [1.586701823E12, 8.313725490196079], [1.586701819E12, 10.020000000000001], [1.586701778E12, 8.799999999999999], [1.586701864E12, 8.058823529411761], [1.586701828E12, 8.851851851851853], [1.586701783E12, 8.849056603773587], [1.586701791E12, 8.38], [1.586701787E12, 8.490196078431376], [1.586701832E12, 7.980769230769234], [1.586701795E12, 9.370370370370372], [1.58670184E12, 8.941176470588237], [1.586701836E12, 8.804347826086955], [1.586701844E12, 7.830188679245283], [1.586701799E12, 9.4375], [1.586701849E12, 9.176470588235293], [1.586701808E12, 10.510204081632653], [1.586701804E12, 8.962962962962962], [1.586701812E12, 9.688888888888886], [1.586701767E12, 10.196721311475407], [1.586701853E12, 8.219999999999999], [1.586701775E12, 8.62], [1.586701861E12, 10.230769230769228], [1.586701771E12, 10.380000000000003], [1.586701857E12, 8.379999999999999], [1.586701816E12, 9.096153846153847], [1.586701779E12, 8.509803921568627], [1.586701865E12, 7.859999999999999], [1.586701824E12, 10.512195121951217], [1.58670182E12, 8.346153846153845], [1.586701829E12, 8.380000000000003], [1.586701825E12, 11.649122807017541], [1.586701784E12, 8.999999999999998], [1.586701833E12, 8.448979591836734], [1.586701792E12, 8.9], [1.586701788E12, 9.042553191489361], [1.586701796E12, 8.600000000000001], [1.586701837E12, 9.288461538461537], [1.586701845E12, 9.808510638297872], [1.586701841E12, 7.999999999999999], [1.5867018E12, 9.320000000000002], [1.58670185E12, 8.134615384615383], [1.586701846E12, 8.339622641509438], [1.586701805E12, 8.440000000000003], [1.586701854E12, 8.380000000000003], [1.586701813E12, 11.148148148148152], [1.586701809E12, 9.624999999999998], [1.586701768E12, 11.38], [1.586701817E12, 8.8125], [1.586701776E12, 9.458333333333336], [1.586701772E12, 9.549019607843139], [1.586701858E12, 8.230769230769232], [1.58670178E12, 9.234042553191488], [1.586701866E12, 8.117647058823529], [1.586701862E12, 7.942307692307693], [1.586701821E12, 9.489361702127658], [1.586701785E12, 8.459999999999999], [1.586701826E12, 8.269230769230768], [1.586701834E12, 8.784313725490195], [1.58670183E12, 8.18], [1.586701789E12, 9.770833333333336], [1.586701838E12, 8.55769230769231], [1.586701797E12, 9.348837209302324], [1.586701793E12, 8.551020408163268], [1.586701801E12, 9.870370370370368], [1.586701842E12, 8.058823529411764]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.586701806E12, 4.625000000000001], [1.586701847E12, 4.244897959183674], [1.586701769E12, 4.320754716981131], [1.586701855E12, 4.4375], [1.586701851E12, 4.244897959183672], [1.58670181E12, 4.596153846153847], [1.586701859E12, 4.16], [1.586701818E12, 4.720000000000001], [1.586701814E12, 3.9230769230769225], [1.586701773E12, 4.43137254901961], [1.586701822E12, 4.596153846153847], [1.586701781E12, 4.384615384615386], [1.586701777E12, 4.320754716981132], [1.586701863E12, 4.387755102040815], [1.586701827E12, 4.32608695652174], [1.586701786E12, 4.500000000000001], [1.586701782E12, 4.895833333333334], [1.58670179E12, 4.1607142857142865], [1.586701831E12, 4.979166666666669], [1.586701839E12, 4.229166666666666], [1.586701835E12, 4.000000000000002], [1.586701794E12, 4.595744680851065], [1.586701843E12, 4.468085106382976], [1.586701802E12, 4.020408163265307], [1.586701798E12, 4.581818181818183], [1.586701807E12, 4.54901960784314], [1.586701803E12, 4.595744680851065], [1.586701848E12, 4.869565217391304], [1.586701811E12, 5.0], [1.58670177E12, 4.957446808510639], [1.586701856E12, 3.819999999999999], [1.586701766E12, 5.25], [1.586701852E12, 4.470588235294118], [1.586701774E12, 4.714285714285715], [1.58670186E12, 5.021739130434782], [1.586701815E12, 4.367346938775509], [1.586701823E12, 4.2745098039215685], [1.586701819E12, 5.079999999999998], [1.586701778E12, 4.380000000000001], [1.586701864E12, 4.215686274509805], [1.586701828E12, 4.388888888888889], [1.586701783E12, 4.283018867924527], [1.586701791E12, 4.28], [1.586701787E12, 4.176470588235292], [1.586701832E12, 4.057692307692309], [1.586701795E12, 4.5925925925925934], [1.58670184E12, 4.53846153846154], [1.586701836E12, 4.369565217391304], [1.586701844E12, 3.849056603773585], [1.586701799E12, 4.541666666666667], [1.586701849E12, 4.4901960784313735], [1.586701808E12, 5.244897959183675], [1.586701804E12, 4.35185185185185], [1.586701812E12, 4.777777777777777], [1.586701767E12, 4.725806451612905], [1.586701853E12, 4.180000000000001], [1.586701775E12, 4.24], [1.586701861E12, 5.0], [1.586701771E12, 4.755102040816326], [1.586701857E12, 4.280000000000001], [1.586701816E12, 4.442307692307692], [1.586701779E12, 4.239999999999998], [1.586701865E12, 4.08], [1.586701824E12, 5.121951219512196], [1.58670182E12, 4.211538461538461], [1.586701829E12, 4.219999999999999], [1.586701825E12, 6.614035087719303], [1.586701784E12, 4.54], [1.586701833E12, 4.448979591836734], [1.586701792E12, 4.500000000000001], [1.586701788E12, 4.382978723404257], [1.586701796E12, 4.399999999999999], [1.586701837E12, 4.538461538461538], [1.586701845E12, 4.765957446808511], [1.586701841E12, 4.0612244897959195], [1.5867018E12, 4.499999999999999], [1.58670185E12, 4.038461538461539], [1.586701846E12, 4.150943396226415], [1.586701805E12, 4.380000000000002], [1.586701854E12, 4.2], [1.586701813E12, 5.351851851851853], [1.586701809E12, 4.833333333333333], [1.586701768E12, 5.3], [1.586701817E12, 4.395833333333333], [1.586701776E12, 4.604166666666668], [1.586701772E12, 4.596153846153847], [1.586701858E12, 4.192307692307691], [1.58670178E12, 4.479166666666667], [1.586701866E12, 4.176470588235294], [1.586701862E12, 3.8846153846153846], [1.586701821E12, 4.659574468085105], [1.586701785E12, 4.12], [1.586701826E12, 4.134615384615386], [1.586701834E12, 4.470588235294117], [1.58670183E12, 4.1000000000000005], [1.586701789E12, 4.770833333333334], [1.586701838E12, 4.230769230769231], [1.586701797E12, 4.674418604651162], [1.586701793E12, 4.3061224489795915], [1.586701801E12, 4.703703703703704], [1.586701842E12, 4.117647058823531]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[1.586701806E12, 2.239583333333333], [1.586701847E12, 2.0404040404040407], [1.586701769E12, 2.3773584905660377], [1.586701855E12, 2.1770833333333326], [1.586701851E12, 2.0707070707070705], [1.58670181E12, 2.403846153846153], [1.586701859E12, 2.0102040816326525], [1.586701818E12, 2.5299999999999985], [1.586701814E12, 2.075471698113208], [1.586701773E12, 2.3600000000000008], [1.586701822E12, 2.298076923076923], [1.586701781E12, 2.1634615384615388], [1.586701777E12, 2.40566037735849], [1.586701863E12, 2.1212121212121215], [1.586701827E12, 2.1956521739130435], [1.586701786E12, 2.4062499999999996], [1.586701782E12, 2.6907216494845367], [1.58670179E12, 2.1363636363636362], [1.586701831E12, 2.4948453608247427], [1.586701839E12, 2.0618556701030935], [1.586701835E12, 1.9405940594059403], [1.586701794E12, 2.268817204301074], [1.586701843E12, 2.404255319148937], [1.586701802E12, 2.1100000000000003], [1.586701798E12, 2.499999999999999], [1.586701807E12, 2.4117647058823524], [1.586701803E12, 2.329787234042554], [1.586701848E12, 2.576086956521739], [1.586701811E12, 2.4897959183673475], [1.58670177E12, 2.7446808510638308], [1.586701856E12, 1.9797979797979806], [1.586701766E12, 6.100000000000001], [1.586701852E12, 2.2941176470588234], [1.586701774E12, 2.323232323232324], [1.58670186E12, 2.5698924731182786], [1.586701815E12, 2.1632653061224487], [1.586701823E12, 2.00990099009901], [1.586701819E12, 2.4607843137254917], [1.586701778E12, 2.21], [1.586701864E12, 1.9411764705882355], [1.586701828E12, 2.2201834862385312], [1.586701783E12, 2.2788461538461537], [1.586701791E12, 2.0500000000000003], [1.586701787E12, 2.145631067961164], [1.586701832E12, 1.9519230769230758], [1.586701795E12, 2.385321100917431], [1.58670184E12, 2.182692307692308], [1.586701836E12, 2.217391304347826], [1.586701844E12, 2.0000000000000004], [1.586701799E12, 2.4479166666666665], [1.586701849E12, 2.3267326732673275], [1.586701808E12, 2.619999999999999], [1.586701804E12, 2.2990654205607477], [1.586701812E12, 2.47777777777778], [1.586701767E12, 2.741935483870967], [1.586701853E12, 2.01], [1.586701775E12, 2.188118811881188], [1.586701861E12, 2.6250000000000004], [1.586701771E12, 2.7959183673469385], [1.586701857E12, 2.0594059405940595], [1.586701816E12, 2.3106796116504853], [1.586701779E12, 2.130000000000001], [1.586701865E12, 1.8699999999999997], [1.586701824E12, 2.7590361445783134], [1.58670182E12, 2.068627450980391], [1.586701829E12, 2.09], [1.586701825E12, 2.469026548672566], [1.586701784E12, 2.2299999999999995], [1.586701833E12, 1.9999999999999993], [1.586701792E12, 2.1980198019801986], [1.586701788E12, 2.3510638297872335], [1.586701796E12, 2.1122448979591826], [1.586701837E12, 2.382352941176472], [1.586701845E12, 2.520833333333333], [1.586701841E12, 1.979591836734694], [1.5867018E12, 2.4099999999999993], [1.58670185E12, 2.048076923076924], [1.586701846E12, 2.0857142857142863], [1.586701805E12, 2.040404040404041], [1.586701854E12, 2.09], [1.586701813E12, 2.89622641509434], [1.586701809E12, 2.4062500000000013], [1.586701768E12, 3.039999999999999], [1.586701817E12, 2.2210526315789454], [1.586701776E12, 2.427083333333333], [1.586701772E12, 2.4711538461538463], [1.586701858E12, 2.0192307692307683], [1.58670178E12, 2.3789473684210543], [1.586701866E12, 1.9848484848484846], [1.586701862E12, 2.0192307692307683], [1.586701821E12, 2.416666666666667], [1.586701785E12, 2.1584158415841586], [1.586701826E12, 2.067307692307692], [1.586701834E12, 2.145631067961165], [1.58670183E12, 2.030303030303029], [1.586701789E12, 2.510416666666667], [1.586701838E12, 2.152380952380953], [1.586701797E12, 2.3522727272727266], [1.586701793E12, 2.1212121212121198], [1.586701801E12, 2.5943396226415105], [1.586701842E12, 1.9603960396039601]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.586701866E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.7, "minX": 1.586701766E12, "maxY": 17.0, "series": [{"data": [[1.586701806E12, 8.416666666666666], [1.586701847E12, 7.7], [1.586701769E12, 8.735849056603774], [1.586701855E12, 8.270833333333336], [1.586701851E12, 7.918367346938776], [1.58670181E12, 8.980769230769232], [1.586701859E12, 7.4], [1.586701818E12, 9.160000000000002], [1.586701814E12, 7.365384615384616], [1.586701773E12, 8.80392156862745], [1.586701822E12, 8.673076923076923], [1.586701781E12, 8.09615384615385], [1.586701777E12, 8.735849056603774], [1.586701863E12, 8.081632653061224], [1.586701827E12, 7.9782608695652195], [1.586701786E12, 8.770833333333334], [1.586701782E12, 9.583333333333332], [1.58670179E12, 7.946428571428574], [1.586701831E12, 9.541666666666666], [1.586701839E12, 7.693877551020408], [1.586701835E12, 7.340000000000001], [1.586701794E12, 8.595744680851059], [1.586701843E12, 8.851063829787234], [1.586701802E12, 7.940000000000002], [1.586701798E12, 9.127272727272727], [1.586701807E12, 8.803921568627452], [1.586701803E12, 8.717391304347823], [1.586701848E12, 9.555555555555555], [1.586701811E12, 9.346938775510205], [1.58670177E12, 9.872340425531917], [1.586701856E12, 7.3], [1.586701766E12, 17.0], [1.586701852E12, 8.470588235294118], [1.586701774E12, 8.857142857142858], [1.58670186E12, 9.543478260869565], [1.586701815E12, 8.081632653061227], [1.586701823E12, 7.823529411764707], [1.586701819E12, 9.499999999999998], [1.586701778E12, 8.240000000000002], [1.586701864E12, 7.411764705882354], [1.586701828E12, 8.351851851851853], [1.586701783E12, 8.433962264150942], [1.586701791E12, 7.82], [1.586701787E12, 7.921568627450983], [1.586701832E12, 7.403846153846155], [1.586701795E12, 8.685185185185185], [1.58670184E12, 8.215686274509801], [1.586701836E12, 8.130434782608695], [1.586701844E12, 7.339622641509434], [1.586701799E12, 8.791666666666664], [1.586701849E12, 8.686274509803923], [1.586701808E12, 10.0], [1.586701804E12, 8.555555555555555], [1.586701812E12, 9.333333333333334], [1.586701767E12, 9.901639344262295], [1.586701853E12, 7.38], [1.586701775E12, 8.34], [1.586701861E12, 9.673076923076922], [1.586701771E12, 10.000000000000005], [1.586701857E12, 7.84], [1.586701816E12, 8.48076923076923], [1.586701779E12, 7.921568627450981], [1.586701865E12, 7.040000000000001], [1.586701824E12, 9.92682926829268], [1.58670182E12, 7.865384615384615], [1.586701829E12, 7.5600000000000005], [1.586701825E12, 11.210526315789474], [1.586701784E12, 8.439999999999998], [1.586701833E12, 7.897959183673468], [1.586701792E12, 8.480000000000002], [1.586701788E12, 8.5531914893617], [1.586701796E12, 7.899999999999998], [1.586701837E12, 8.596153846153843], [1.586701845E12, 9.191489361702127], [1.586701841E12, 7.408163265306123], [1.5867018E12, 8.96], [1.58670185E12, 7.615384615384616], [1.586701846E12, 7.867924528301885], [1.586701805E12, 7.799999999999999], [1.586701854E12, 7.74], [1.586701813E12, 10.46296296296296], [1.586701809E12, 8.833333333333334], [1.586701768E12, 10.920000000000002], [1.586701817E12, 8.16666666666667], [1.586701776E12, 9.145833333333329], [1.586701772E12, 9.176470588235293], [1.586701858E12, 7.596153846153847], [1.58670178E12, 8.659574468085106], [1.586701866E12, 7.529411764705884], [1.586701862E12, 7.28846153846154], [1.586701821E12, 8.957446808510637], [1.586701785E12, 8.08], [1.586701826E12, 7.769230769230768], [1.586701834E12, 8.215686274509803], [1.58670183E12, 7.500000000000001], [1.586701789E12, 9.291666666666668], [1.586701838E12, 8.057692307692307], [1.586701797E12, 8.976744186046512], [1.586701793E12, 7.897959183673466], [1.586701801E12, 9.351851851851851], [1.586701842E12, 7.372549019607844]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.586701806E12, 4.270833333333335], [1.586701847E12, 3.8979591836734686], [1.586701769E12, 4.169811320754717], [1.586701855E12, 4.166666666666665], [1.586701851E12, 3.959183673469387], [1.58670181E12, 4.365384615384615], [1.586701859E12, 3.7799999999999994], [1.586701818E12, 4.500000000000003], [1.586701814E12, 3.5961538461538467], [1.586701773E12, 4.313725490196078], [1.586701822E12, 4.365384615384614], [1.586701781E12, 4.0769230769230775], [1.586701777E12, 4.09433962264151], [1.586701863E12, 4.122448979591838], [1.586701827E12, 3.978260869565217], [1.586701786E12, 4.291666666666665], [1.586701782E12, 4.604166666666667], [1.58670179E12, 3.910714285714286], [1.586701831E12, 4.854166666666667], [1.586701839E12, 3.8541666666666674], [1.586701835E12, 3.7799999999999994], [1.586701794E12, 4.297872340425532], [1.586701843E12, 4.297872340425532], [1.586701802E12, 3.918367346938775], [1.586701798E12, 4.327272727272728], [1.586701807E12, 4.23529411764706], [1.586701803E12, 4.361702127659574], [1.586701848E12, 4.630434782608697], [1.586701811E12, 4.591836734693877], [1.58670177E12, 4.680851063829788], [1.586701856E12, 3.5800000000000005], [1.586701766E12, 5.0], [1.586701852E12, 4.196078431372549], [1.586701774E12, 4.408163265306123], [1.58670186E12, 4.695652173913044], [1.586701815E12, 4.122448979591837], [1.586701823E12, 4.000000000000001], [1.586701819E12, 4.82], [1.586701778E12, 4.100000000000001], [1.586701864E12, 3.88235294117647], [1.586701828E12, 4.12962962962963], [1.586701783E12, 4.056603773584905], [1.586701791E12, 4.079999999999998], [1.586701787E12, 3.92156862745098], [1.586701832E12, 3.7499999999999996], [1.586701795E12, 4.203703703703704], [1.58670184E12, 4.173076923076923], [1.586701836E12, 4.0434782608695645], [1.586701844E12, 3.622641509433963], [1.586701799E12, 4.270833333333334], [1.586701849E12, 4.215686274509803], [1.586701808E12, 4.95918367346939], [1.586701804E12, 4.111111111111111], [1.586701812E12, 4.644444444444445], [1.586701767E12, 4.645161290322583], [1.586701853E12, 3.6999999999999997], [1.586701775E12, 4.0200000000000005], [1.586701861E12, 4.71153846153846], [1.586701771E12, 4.612244897959183], [1.586701857E12, 4.040000000000001], [1.586701816E12, 4.153846153846152], [1.586701779E12, 3.919999999999999], [1.586701865E12, 3.62], [1.586701824E12, 4.926829268292684], [1.58670182E12, 3.999999999999999], [1.586701829E12, 3.78], [1.586701825E12, 6.4035087719298245], [1.586701784E12, 4.2], [1.586701833E12, 4.142857142857142], [1.586701792E12, 4.34], [1.586701788E12, 4.127659574468086], [1.586701796E12, 4.000000000000002], [1.586701837E12, 4.134615384615386], [1.586701845E12, 4.48936170212766], [1.586701841E12, 3.7551020408163267], [1.5867018E12, 4.26], [1.58670185E12, 3.7692307692307696], [1.586701846E12, 3.9245283018867942], [1.586701805E12, 3.9799999999999995], [1.586701854E12, 3.88], [1.586701813E12, 5.0], [1.586701809E12, 4.458333333333332], [1.586701768E12, 5.060000000000001], [1.586701817E12, 4.083333333333333], [1.586701776E12, 4.541666666666666], [1.586701772E12, 4.442307692307692], [1.586701858E12, 3.865384615384615], [1.58670178E12, 4.291666666666667], [1.586701866E12, 3.7941176470588234], [1.586701862E12, 3.6153846153846154], [1.586701821E12, 4.404255319148935], [1.586701785E12, 3.8999999999999995], [1.586701826E12, 3.8461538461538454], [1.586701834E12, 4.176470588235294], [1.58670183E12, 3.8200000000000003], [1.586701789E12, 4.520833333333332], [1.586701838E12, 3.942307692307694], [1.586701797E12, 4.441860465116278], [1.586701793E12, 3.9999999999999996], [1.586701801E12, 4.462962962962964], [1.586701842E12, 3.803921568627451]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[1.586701806E12, 2.072916666666667], [1.586701847E12, 1.8989898989898986], [1.586701769E12, 2.273584905660378], [1.586701855E12, 2.052083333333333], [1.586701851E12, 1.97979797979798], [1.58670181E12, 2.307692307692307], [1.586701859E12, 1.8163265306122445], [1.586701818E12, 2.330000000000001], [1.586701814E12, 1.8773584905660372], [1.586701773E12, 2.250000000000001], [1.586701822E12, 2.153846153846154], [1.586701781E12, 2.009615384615385], [1.586701777E12, 2.311320754716982], [1.586701863E12, 1.9797979797979797], [1.586701827E12, 2.010869565217391], [1.586701786E12, 2.250000000000001], [1.586701782E12, 2.494845360824742], [1.58670179E12, 2.0090909090909084], [1.586701831E12, 2.360824742268042], [1.586701839E12, 1.927835051546392], [1.586701835E12, 1.7920792079207928], [1.586701794E12, 2.1397849462365603], [1.586701843E12, 2.276595744680851], [1.586701802E12, 2.0100000000000007], [1.586701798E12, 2.3818181818181823], [1.586701807E12, 2.284313725490196], [1.586701803E12, 2.1702127659574457], [1.586701848E12, 2.456521739130435], [1.586701811E12, 2.3775510204081627], [1.58670177E12, 2.6170212765957444], [1.586701856E12, 1.8484848484848484], [1.586701766E12, 6.0], [1.586701852E12, 2.156862745098039], [1.586701774E12, 2.222222222222222], [1.58670186E12, 2.4086021505376345], [1.586701815E12, 1.9999999999999998], [1.586701823E12, 1.9009900990099005], [1.586701819E12, 2.3333333333333326], [1.586701778E12, 2.08], [1.586701864E12, 1.7745098039215685], [1.586701828E12, 2.10091743119266], [1.586701783E12, 2.182692307692309], [1.586701791E12, 1.8699999999999994], [1.586701787E12, 1.9902912621359221], [1.586701832E12, 1.8173076923076923], [1.586701795E12, 2.2385321100917444], [1.58670184E12, 2.0096153846153846], [1.586701836E12, 2.0326086956521743], [1.586701844E12, 1.8666666666666667], [1.586701799E12, 2.260416666666667], [1.586701849E12, 2.217821782178218], [1.586701808E12, 2.51], [1.586701804E12, 2.2149532710280377], [1.586701812E12, 2.3666666666666667], [1.586701767E12, 2.6370967741935494], [1.586701853E12, 1.8299999999999998], [1.586701775E12, 2.1584158415841572], [1.586701861E12, 2.490384615384616], [1.586701771E12, 2.6734693877551026], [1.586701857E12, 1.910891089108911], [1.586701816E12, 2.1456310679611663], [1.586701779E12, 1.9899999999999995], [1.586701865E12, 1.7], [1.586701824E12, 2.5542168674698793], [1.58670182E12, 1.931372549019608], [1.586701829E12, 1.8899999999999997], [1.586701825E12, 2.3628318584070795], [1.586701784E12, 2.1199999999999997], [1.586701833E12, 1.8749999999999998], [1.586701792E12, 2.069306930693068], [1.586701788E12, 2.2340425531914896], [1.586701796E12, 1.959183673469388], [1.586701837E12, 2.245098039215686], [1.586701845E12, 2.354166666666666], [1.586701841E12, 1.8367346938775506], [1.5867018E12, 2.3499999999999988], [1.58670185E12, 1.9230769230769234], [1.586701846E12, 1.961904761904762], [1.586701805E12, 1.9191919191919193], [1.586701854E12, 1.9299999999999997], [1.586701813E12, 2.726415094339623], [1.586701809E12, 2.1875000000000013], [1.586701768E12, 2.9300000000000006], [1.586701817E12, 2.052631578947369], [1.586701776E12, 2.302083333333334], [1.586701772E12, 2.3653846153846168], [1.586701858E12, 1.85576923076923], [1.58670178E12, 2.1894736842105265], [1.586701866E12, 1.878787878787879], [1.586701862E12, 1.8269230769230769], [1.586701821E12, 2.270833333333333], [1.586701785E12, 2.079207920792079], [1.586701826E12, 1.9615384615384615], [1.586701834E12, 2.009708737864078], [1.58670183E12, 1.8383838383838378], [1.586701789E12, 2.385416666666667], [1.586701838E12, 2.047619047619048], [1.586701797E12, 2.2840909090909096], [1.586701793E12, 1.9494949494949496], [1.586701801E12, 2.452830188679245], [1.586701842E12, 1.7722772277227727]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.586701866E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.586701766E12, "maxY": 4.4, "series": [{"data": [[1.586701806E12, 0.45833333333333326], [1.586701847E12, 0.5599999999999999], [1.586701769E12, 0.5849056603773584], [1.586701855E12, 0.4166666666666667], [1.586701851E12, 0.5918367346938773], [1.58670181E12, 0.49999999999999994], [1.586701859E12, 0.46], [1.586701818E12, 0.6399999999999999], [1.586701814E12, 0.36538461538461536], [1.586701773E12, 0.5490196078431372], [1.586701822E12, 0.5576923076923077], [1.586701781E12, 0.44230769230769246], [1.586701777E12, 0.6037735849056602], [1.586701863E12, 0.4081632653061224], [1.586701827E12, 0.3695652173913043], [1.586701786E12, 0.5208333333333333], [1.586701782E12, 0.5624999999999999], [1.58670179E12, 0.37499999999999994], [1.586701831E12, 0.5208333333333331], [1.586701839E12, 0.5306122448979592], [1.586701835E12, 0.4], [1.586701794E12, 0.44680851063829785], [1.586701843E12, 0.425531914893617], [1.586701802E12, 0.54], [1.586701798E12, 0.5272727272727272], [1.586701807E12, 0.45098039215686275], [1.586701803E12, 0.6086956521739129], [1.586701848E12, 0.6222222222222223], [1.586701811E12, 0.5510204081632653], [1.58670177E12, 0.7659574468085107], [1.586701856E12, 0.58], [1.586701766E12, 4.4], [1.586701852E12, 0.47058823529411764], [1.586701774E12, 0.6122448979591835], [1.58670186E12, 0.5869565217391304], [1.586701815E12, 0.510204081632653], [1.586701823E12, 0.588235294117647], [1.586701819E12, 0.5799999999999997], [1.586701778E12, 0.5000000000000001], [1.586701864E12, 0.31372549019607837], [1.586701828E12, 0.5740740740740741], [1.586701783E12, 0.5660377358490567], [1.586701791E12, 0.5], [1.586701787E12, 0.47058823529411775], [1.586701832E12, 0.3846153846153847], [1.586701795E12, 0.5370370370370371], [1.58670184E12, 0.29411764705882354], [1.586701836E12, 0.49999999999999983], [1.586701844E12, 0.5849056603773584], [1.586701799E12, 0.5624999999999999], [1.586701849E12, 0.5490196078431372], [1.586701808E12, 0.6530612244897959], [1.586701804E12, 0.5925925925925923], [1.586701812E12, 0.5999999999999999], [1.586701767E12, 0.8032786885245901], [1.586701853E12, 0.39999999999999997], [1.586701775E12, 0.68], [1.586701861E12, 0.5384615384615384], [1.586701771E12, 1.0], [1.586701857E12, 0.4599999999999999], [1.586701816E12, 0.4807692307692306], [1.586701779E12, 0.45098039215686264], [1.586701865E12, 0.4], [1.586701824E12, 0.6829268292682926], [1.58670182E12, 0.44230769230769246], [1.586701829E12, 0.38000000000000006], [1.586701825E12, 0.49122807017543874], [1.586701784E12, 0.6799999999999998], [1.586701833E12, 0.44897959183673464], [1.586701792E12, 0.5599999999999999], [1.586701788E12, 0.6170212765957447], [1.586701796E12, 0.5399999999999999], [1.586701837E12, 0.5576923076923077], [1.586701845E12, 0.5957446808510637], [1.586701841E12, 0.48979591836734704], [1.5867018E12, 0.5999999999999999], [1.58670185E12, 0.3846153846153844], [1.586701846E12, 0.509433962264151], [1.586701805E12, 0.52], [1.586701854E12, 0.44000000000000006], [1.586701813E12, 0.6666666666666666], [1.586701809E12, 0.47916666666666685], [1.586701768E12, 0.8599999999999999], [1.586701817E12, 0.5624999999999999], [1.586701776E12, 0.5833333333333333], [1.586701772E12, 0.6470588235294118], [1.586701858E12, 0.5384615384615385], [1.58670178E12, 0.5957446808510637], [1.586701866E12, 0.5294117647058825], [1.586701862E12, 0.38461538461538475], [1.586701821E12, 0.4680851063829787], [1.586701785E12, 0.4600000000000001], [1.586701826E12, 0.4807692307692307], [1.586701834E12, 0.588235294117647], [1.58670183E12, 0.4800000000000001], [1.586701789E12, 0.6249999999999999], [1.586701838E12, 0.5192307692307692], [1.586701797E12, 0.5116279069767442], [1.586701793E12, 0.5714285714285713], [1.586701801E12, 0.648148148148148], [1.586701842E12, 0.3137254901960784]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.586701806E12, 0.0], [1.586701847E12, 0.0], [1.586701769E12, 0.0], [1.586701855E12, 0.0], [1.586701851E12, 0.0], [1.58670181E12, 0.0], [1.586701859E12, 0.0], [1.586701818E12, 0.0], [1.586701814E12, 0.0], [1.586701773E12, 0.0], [1.586701822E12, 0.0], [1.586701781E12, 0.0], [1.586701777E12, 0.0], [1.586701863E12, 0.0], [1.586701827E12, 0.0], [1.586701786E12, 0.0], [1.586701782E12, 0.0], [1.58670179E12, 0.0], [1.586701831E12, 0.0], [1.586701839E12, 0.0], [1.586701835E12, 0.0], [1.586701794E12, 0.0], [1.586701843E12, 0.0], [1.586701802E12, 0.0], [1.586701798E12, 0.0], [1.586701807E12, 0.0], [1.586701803E12, 0.0], [1.586701848E12, 0.0], [1.586701811E12, 0.0], [1.58670177E12, 0.0], [1.586701856E12, 0.0], [1.586701766E12, 0.0], [1.586701852E12, 0.0], [1.586701774E12, 0.0], [1.58670186E12, 0.0], [1.586701815E12, 0.0], [1.586701823E12, 0.0], [1.586701819E12, 0.0], [1.586701778E12, 0.0], [1.586701864E12, 0.0], [1.586701828E12, 0.0], [1.586701783E12, 0.0], [1.586701791E12, 0.0], [1.586701787E12, 0.0], [1.586701832E12, 0.0], [1.586701795E12, 0.0], [1.58670184E12, 0.0], [1.586701836E12, 0.0], [1.586701844E12, 0.0], [1.586701799E12, 0.0], [1.586701849E12, 0.0], [1.586701808E12, 0.0], [1.586701804E12, 0.0], [1.586701812E12, 0.0], [1.586701767E12, 0.0], [1.586701853E12, 0.0], [1.586701775E12, 0.0], [1.586701861E12, 0.0], [1.586701771E12, 0.0], [1.586701857E12, 0.0], [1.586701816E12, 0.0], [1.586701779E12, 0.0], [1.586701865E12, 0.0], [1.586701824E12, 0.0], [1.58670182E12, 0.0], [1.586701829E12, 0.0], [1.586701825E12, 0.0], [1.586701784E12, 0.0], [1.586701833E12, 0.0], [1.586701792E12, 0.0], [1.586701788E12, 0.0], [1.586701796E12, 0.0], [1.586701837E12, 0.0], [1.586701845E12, 0.0], [1.586701841E12, 0.0], [1.5867018E12, 0.0], [1.58670185E12, 0.0], [1.586701846E12, 0.0], [1.586701805E12, 0.0], [1.586701854E12, 0.0], [1.586701813E12, 0.0], [1.586701809E12, 0.0], [1.586701768E12, 0.0], [1.586701817E12, 0.0], [1.586701776E12, 0.0], [1.586701772E12, 0.0], [1.586701858E12, 0.0], [1.58670178E12, 0.0], [1.586701866E12, 0.0], [1.586701862E12, 0.0], [1.586701821E12, 0.0], [1.586701785E12, 0.0], [1.586701826E12, 0.0], [1.586701834E12, 0.0], [1.58670183E12, 0.0], [1.586701789E12, 0.0], [1.586701838E12, 0.0], [1.586701797E12, 0.0], [1.586701793E12, 0.0], [1.586701801E12, 0.0], [1.586701842E12, 0.0]], "isOverall": false, "label": "http://localhost:8080/Device/Search", "isController": false}, {"data": [[1.586701806E12, 0.22916666666666669], [1.586701847E12, 0.2727272727272729], [1.586701769E12, 0.29245283018867935], [1.586701855E12, 0.20833333333333337], [1.586701851E12, 0.3030303030303031], [1.58670181E12, 0.25000000000000006], [1.586701859E12, 0.23469387755102053], [1.586701818E12, 0.3199999999999999], [1.586701814E12, 0.17924528301886788], [1.586701773E12, 0.27999999999999997], [1.586701822E12, 0.2788461538461538], [1.586701781E12, 0.22115384615384626], [1.586701777E12, 0.3018867924528301], [1.586701863E12, 0.19191919191919196], [1.586701827E12, 0.19565217391304354], [1.586701786E12, 0.27083333333333315], [1.586701782E12, 0.2783505154639176], [1.58670179E12, 0.1818181818181818], [1.586701831E12, 0.2577319587628866], [1.586701839E12, 0.2680412371134022], [1.586701835E12, 0.19801980198019808], [1.586701794E12, 0.22580645161290328], [1.586701843E12, 0.22340425531914898], [1.586701802E12, 0.27], [1.586701798E12, 0.26363636363636367], [1.586701807E12, 0.22549019607843135], [1.586701803E12, 0.3085106382978724], [1.586701848E12, 0.3152173913043478], [1.586701811E12, 0.27551020408163274], [1.58670177E12, 0.3829787234042555], [1.586701856E12, 0.292929292929293], [1.586701766E12, 2.2], [1.586701852E12, 0.22549019607843143], [1.586701774E12, 0.31313131313131315], [1.58670186E12, 0.2903225806451615], [1.586701815E12, 0.26530612244897955], [1.586701823E12, 0.2871287128712871], [1.586701819E12, 0.29411764705882365], [1.586701778E12, 0.25000000000000006], [1.586701864E12, 0.16666666666666674], [1.586701828E12, 0.27522935779816515], [1.586701783E12, 0.2788461538461538], [1.586701791E12, 0.24999999999999992], [1.586701787E12, 0.23300970873786417], [1.586701832E12, 0.19230769230769226], [1.586701795E12, 0.27522935779816526], [1.58670184E12, 0.1538461538461539], [1.586701836E12, 0.24999999999999994], [1.586701844E12, 0.285714285714286], [1.586701799E12, 0.27083333333333326], [1.586701849E12, 0.26732673267326734], [1.586701808E12, 0.31999999999999995], [1.586701804E12, 0.29906542056074775], [1.586701812E12, 0.30000000000000016], [1.586701767E12, 0.40322580645161277], [1.586701853E12, 0.2], [1.586701775E12, 0.33663366336633654], [1.586701861E12, 0.27884615384615397], [1.586701771E12, 0.5000000000000002], [1.586701857E12, 0.21782178217821777], [1.586701816E12, 0.23300970873786409], [1.586701779E12, 0.23], [1.586701865E12, 0.20000000000000007], [1.586701824E12, 0.3493975903614458], [1.58670182E12, 0.215686274509804], [1.586701829E12, 0.19000000000000003], [1.586701825E12, 0.2389380530973452], [1.586701784E12, 0.34000000000000014], [1.586701833E12, 0.22916666666666666], [1.586701792E12, 0.2871287128712872], [1.586701788E12, 0.30851063829787245], [1.586701796E12, 0.2653061224489797], [1.586701837E12, 0.28431372549019607], [1.586701845E12, 0.29166666666666674], [1.586701841E12, 0.24489795918367346], [1.5867018E12, 0.2999999999999998], [1.58670185E12, 0.19230769230769235], [1.586701846E12, 0.26666666666666655], [1.586701805E12, 0.25252525252525254], [1.586701854E12, 0.23000000000000004], [1.586701813E12, 0.33018867924528283], [1.586701809E12, 0.25], [1.586701768E12, 0.43], [1.586701817E12, 0.28421052631578947], [1.586701776E12, 0.28125000000000006], [1.586701772E12, 0.31730769230769224], [1.586701858E12, 0.2692307692307692], [1.58670178E12, 0.3052631578947369], [1.586701866E12, 0.25757575757575757], [1.586701862E12, 0.19230769230769237], [1.586701821E12, 0.2395833333333334], [1.586701785E12, 0.22772277227722781], [1.586701826E12, 0.24038461538461545], [1.586701834E12, 0.29126213592233013], [1.58670183E12, 0.2424242424242423], [1.586701789E12, 0.3125], [1.586701838E12, 0.25714285714285723], [1.586701797E12, 0.2613636363636364], [1.586701793E12, 0.27272727272727276], [1.586701801E12, 0.33018867924528295], [1.586701842E12, 0.14851485148514856]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.586701866E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.586701766E12, "maxY": 112.0, "series": [{"data": [[1.586701806E12, 6.0], [1.586701847E12, 5.0], [1.586701769E12, 5.0], [1.586701855E12, 6.0], [1.586701851E12, 6.0], [1.58670181E12, 9.0], [1.586701859E12, 6.0], [1.586701818E12, 6.0], [1.586701814E12, 5.0], [1.586701773E12, 6.0], [1.586701822E12, 6.0], [1.586701781E12, 6.0], [1.586701777E12, 6.0], [1.586701863E12, 6.0], [1.586701827E12, 6.0], [1.586701786E12, 6.0], [1.586701782E12, 7.0], [1.58670179E12, 7.0], [1.586701831E12, 17.0], [1.586701839E12, 5.0], [1.586701835E12, 6.0], [1.586701794E12, 6.0], [1.586701843E12, 6.0], [1.586701802E12, 6.0], [1.586701798E12, 6.0], [1.586701807E12, 6.0], [1.586701803E12, 7.0], [1.586701848E12, 7.0], [1.586701811E12, 7.0], [1.58670177E12, 7.0], [1.586701856E12, 6.0], [1.586701766E12, 33.0], [1.586701852E12, 7.0], [1.586701774E12, 6.0], [1.58670186E12, 7.0], [1.586701815E12, 5.0], [1.586701823E12, 6.0], [1.586701819E12, 23.0], [1.586701778E12, 6.0], [1.586701864E12, 8.0], [1.586701828E12, 6.0], [1.586701783E12, 6.0], [1.586701791E12, 6.0], [1.586701787E12, 6.0], [1.586701832E12, 6.0], [1.586701795E12, 6.0], [1.58670184E12, 6.0], [1.586701836E12, 6.0], [1.586701844E12, 5.0], [1.586701799E12, 6.0], [1.586701849E12, 6.0], [1.586701808E12, 14.0], [1.586701804E12, 7.0], [1.586701812E12, 7.0], [1.586701767E12, 8.0], [1.586701853E12, 6.0], [1.586701775E12, 7.0], [1.586701861E12, 8.0], [1.586701771E12, 19.0], [1.586701857E12, 5.0], [1.586701816E12, 6.0], [1.586701779E12, 6.0], [1.586701865E12, 5.0], [1.586701824E12, 8.0], [1.58670182E12, 6.0], [1.586701829E12, 6.0], [1.586701825E12, 112.0], [1.586701784E12, 14.0], [1.586701833E12, 6.0], [1.586701792E12, 6.0], [1.586701788E12, 6.0], [1.586701796E12, 6.0], [1.586701837E12, 6.0], [1.586701845E12, 7.0], [1.586701841E12, 6.0], [1.5867018E12, 7.0], [1.58670185E12, 6.0], [1.586701846E12, 5.0], [1.586701805E12, 6.0], [1.586701854E12, 6.0], [1.586701813E12, 8.0], [1.586701809E12, 6.0], [1.586701768E12, 14.0], [1.586701817E12, 6.0], [1.586701776E12, 6.0], [1.586701772E12, 7.0], [1.586701858E12, 6.0], [1.58670178E12, 6.0], [1.586701866E12, 5.0], [1.586701862E12, 6.0], [1.586701821E12, 6.0], [1.586701785E12, 5.0], [1.586701826E12, 5.0], [1.586701834E12, 7.0], [1.58670183E12, 5.0], [1.586701789E12, 8.0], [1.586701838E12, 10.0], [1.586701797E12, 14.0], [1.586701793E12, 6.0], [1.586701801E12, 8.0], [1.586701842E12, 6.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.586701806E12, 1.0], [1.586701847E12, 1.0], [1.586701769E12, 1.0], [1.586701855E12, 1.0], [1.586701851E12, 1.0], [1.58670181E12, 1.0], [1.586701859E12, 1.0], [1.586701818E12, 1.0], [1.586701814E12, 1.0], [1.586701773E12, 1.0], [1.586701822E12, 1.0], [1.586701781E12, 1.0], [1.586701777E12, 1.0], [1.586701863E12, 1.0], [1.586701827E12, 1.0], [1.586701786E12, 1.0], [1.586701782E12, 1.0], [1.58670179E12, 1.0], [1.586701831E12, 1.0], [1.586701839E12, 1.0], [1.586701835E12, 1.0], [1.586701794E12, 1.0], [1.586701843E12, 1.0], [1.586701802E12, 1.0], [1.586701798E12, 1.0], [1.586701807E12, 1.0], [1.586701803E12, 1.0], [1.586701848E12, 1.0], [1.586701811E12, 1.0], [1.58670177E12, 1.0], [1.586701856E12, 0.0], [1.586701766E12, 1.0], [1.586701852E12, 1.0], [1.586701774E12, 1.0], [1.58670186E12, 1.0], [1.586701815E12, 1.0], [1.586701823E12, 1.0], [1.586701819E12, 1.0], [1.586701778E12, 1.0], [1.586701864E12, 1.0], [1.586701828E12, 1.0], [1.586701783E12, 1.0], [1.586701791E12, 1.0], [1.586701787E12, 1.0], [1.586701832E12, 1.0], [1.586701795E12, 1.0], [1.58670184E12, 1.0], [1.586701836E12, 1.0], [1.586701844E12, 1.0], [1.586701799E12, 1.0], [1.586701849E12, 1.0], [1.586701808E12, 1.0], [1.586701804E12, 1.0], [1.586701812E12, 1.0], [1.586701767E12, 1.0], [1.586701853E12, 1.0], [1.586701775E12, 1.0], [1.586701861E12, 1.0], [1.586701771E12, 1.0], [1.586701857E12, 1.0], [1.586701816E12, 1.0], [1.586701779E12, 1.0], [1.586701865E12, 1.0], [1.586701824E12, 1.0], [1.58670182E12, 1.0], [1.586701829E12, 1.0], [1.586701825E12, 1.0], [1.586701784E12, 1.0], [1.586701833E12, 1.0], [1.586701792E12, 1.0], [1.586701788E12, 1.0], [1.586701796E12, 1.0], [1.586701837E12, 1.0], [1.586701845E12, 1.0], [1.586701841E12, 1.0], [1.5867018E12, 1.0], [1.58670185E12, 1.0], [1.586701846E12, 1.0], [1.586701805E12, 1.0], [1.586701854E12, 1.0], [1.586701813E12, 1.0], [1.586701809E12, 1.0], [1.586701768E12, 1.0], [1.586701817E12, 1.0], [1.586701776E12, 1.0], [1.586701772E12, 1.0], [1.586701858E12, 1.0], [1.58670178E12, 1.0], [1.586701866E12, 1.0], [1.586701862E12, 1.0], [1.586701821E12, 1.0], [1.586701785E12, 1.0], [1.586701826E12, 1.0], [1.586701834E12, 1.0], [1.58670183E12, 1.0], [1.586701789E12, 1.0], [1.586701838E12, 1.0], [1.586701797E12, 1.0], [1.586701793E12, 1.0], [1.586701801E12, 1.0], [1.586701842E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.586701806E12, 5.0], [1.586701847E12, 5.0], [1.586701769E12, 5.0], [1.586701855E12, 5.0], [1.586701851E12, 5.0], [1.58670181E12, 5.0], [1.586701859E12, 5.0], [1.586701818E12, 5.0], [1.586701814E12, 5.0], [1.586701773E12, 5.0], [1.586701822E12, 5.0], [1.586701781E12, 5.0], [1.586701777E12, 5.0], [1.586701863E12, 5.0], [1.586701827E12, 5.0], [1.586701786E12, 5.0], [1.586701782E12, 5.0], [1.58670179E12, 5.0], [1.586701831E12, 5.0], [1.586701839E12, 5.0], [1.586701835E12, 5.0], [1.586701794E12, 5.0], [1.586701843E12, 5.0], [1.586701802E12, 5.0], [1.586701798E12, 5.0], [1.586701807E12, 5.0], [1.586701803E12, 5.0], [1.586701848E12, 5.0], [1.586701811E12, 5.0], [1.58670177E12, 5.0], [1.586701856E12, 5.0], [1.586701766E12, 21.0], [1.586701852E12, 5.0], [1.586701774E12, 5.0], [1.58670186E12, 5.0], [1.586701815E12, 5.0], [1.586701823E12, 5.0], [1.586701819E12, 5.0], [1.586701778E12, 5.0], [1.586701864E12, 5.0], [1.586701828E12, 5.0], [1.586701783E12, 5.0], [1.586701791E12, 5.0], [1.586701787E12, 5.0], [1.586701832E12, 5.0], [1.586701795E12, 5.0], [1.58670184E12, 5.0], [1.586701836E12, 5.0], [1.586701844E12, 5.0], [1.586701799E12, 5.0], [1.586701849E12, 5.0], [1.586701808E12, 5.0], [1.586701804E12, 5.0], [1.586701812E12, 5.0], [1.586701767E12, 5.0], [1.586701853E12, 5.0], [1.586701775E12, 5.0], [1.586701861E12, 5.0], [1.586701771E12, 5.0], [1.586701857E12, 5.0], [1.586701816E12, 5.0], [1.586701779E12, 5.0], [1.586701865E12, 5.0], [1.586701824E12, 5.0], [1.58670182E12, 5.0], [1.586701829E12, 5.0], [1.586701825E12, 5.0], [1.586701784E12, 5.0], [1.586701833E12, 5.0], [1.586701792E12, 5.0], [1.586701788E12, 5.0], [1.586701796E12, 5.0], [1.586701837E12, 5.0], [1.586701845E12, 5.0], [1.586701841E12, 5.0], [1.5867018E12, 5.0], [1.58670185E12, 5.0], [1.586701846E12, 5.0], [1.586701805E12, 5.0], [1.586701854E12, 5.0], [1.586701813E12, 5.0], [1.586701809E12, 5.0], [1.586701768E12, 5.0], [1.586701817E12, 5.0], [1.586701776E12, 5.0], [1.586701772E12, 5.0], [1.586701858E12, 5.0], [1.58670178E12, 5.0], [1.586701866E12, 5.0], [1.586701862E12, 5.0], [1.586701821E12, 5.0], [1.586701785E12, 5.0], [1.586701826E12, 5.0], [1.586701834E12, 5.0], [1.58670183E12, 5.0], [1.586701789E12, 5.0], [1.586701838E12, 5.0], [1.586701797E12, 5.0], [1.586701793E12, 5.0], [1.586701801E12, 5.0], [1.586701842E12, 5.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.586701806E12, 6.0], [1.586701847E12, 6.0], [1.586701769E12, 7.0], [1.586701855E12, 6.0], [1.586701851E12, 6.0], [1.58670181E12, 6.0], [1.586701859E12, 6.0], [1.586701818E12, 6.0], [1.586701814E12, 6.0], [1.586701773E12, 6.0], [1.586701822E12, 6.0], [1.586701781E12, 6.0], [1.586701777E12, 6.0], [1.586701863E12, 6.0], [1.586701827E12, 6.0], [1.586701786E12, 6.0], [1.586701782E12, 6.0], [1.58670179E12, 6.0], [1.586701831E12, 6.0], [1.586701839E12, 6.0], [1.586701835E12, 6.0], [1.586701794E12, 6.0], [1.586701843E12, 6.0], [1.586701802E12, 6.0], [1.586701798E12, 6.0], [1.586701807E12, 6.0], [1.586701803E12, 6.0], [1.586701848E12, 6.0], [1.586701811E12, 6.0], [1.58670177E12, 7.0], [1.586701856E12, 6.0], [1.586701766E12, 33.0], [1.586701852E12, 6.0], [1.586701774E12, 6.0], [1.58670186E12, 6.0], [1.586701815E12, 6.0], [1.586701823E12, 6.0], [1.586701819E12, 6.0], [1.586701778E12, 6.0], [1.586701864E12, 6.0], [1.586701828E12, 6.0], [1.586701783E12, 6.0], [1.586701791E12, 6.0], [1.586701787E12, 6.0], [1.586701832E12, 6.0], [1.586701795E12, 6.0], [1.58670184E12, 6.0], [1.586701836E12, 6.0], [1.586701844E12, 6.0], [1.586701799E12, 6.0], [1.586701849E12, 6.0], [1.586701808E12, 6.0], [1.586701804E12, 6.0], [1.586701812E12, 6.0], [1.586701767E12, 8.990000000000009], [1.586701853E12, 6.0], [1.586701775E12, 6.0], [1.586701861E12, 6.0], [1.586701771E12, 7.0], [1.586701857E12, 6.0], [1.586701816E12, 6.0], [1.586701779E12, 6.0], [1.586701865E12, 6.0], [1.586701824E12, 6.0], [1.58670182E12, 6.0], [1.586701829E12, 6.0], [1.586701825E12, 6.0], [1.586701784E12, 6.0], [1.586701833E12, 6.0], [1.586701792E12, 6.0], [1.586701788E12, 6.0], [1.586701796E12, 6.0], [1.586701837E12, 6.0], [1.586701845E12, 6.0], [1.586701841E12, 6.0], [1.5867018E12, 6.0], [1.58670185E12, 6.0], [1.586701846E12, 6.0], [1.586701805E12, 6.0], [1.586701854E12, 6.0], [1.586701813E12, 6.0], [1.586701809E12, 6.0], [1.586701768E12, 8.490000000000009], [1.586701817E12, 6.0], [1.586701776E12, 6.0], [1.586701772E12, 7.0], [1.586701858E12, 6.0], [1.58670178E12, 6.0], [1.586701866E12, 6.0], [1.586701862E12, 6.0], [1.586701821E12, 6.0], [1.586701785E12, 6.0], [1.586701826E12, 6.0], [1.586701834E12, 6.0], [1.58670183E12, 6.0], [1.586701789E12, 6.0], [1.586701838E12, 6.0], [1.586701797E12, 6.0], [1.586701793E12, 6.0], [1.586701801E12, 6.0], [1.586701842E12, 6.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.586701806E12, 5.0], [1.586701847E12, 5.0], [1.586701769E12, 6.0], [1.586701855E12, 5.0], [1.586701851E12, 5.0], [1.58670181E12, 5.0], [1.586701859E12, 5.0], [1.586701818E12, 5.0], [1.586701814E12, 5.0], [1.586701773E12, 5.0], [1.586701822E12, 5.0], [1.586701781E12, 5.0], [1.586701777E12, 5.0], [1.586701863E12, 5.0], [1.586701827E12, 5.0], [1.586701786E12, 5.0], [1.586701782E12, 5.0], [1.58670179E12, 5.0], [1.586701831E12, 5.0], [1.586701839E12, 5.0], [1.586701835E12, 5.0], [1.586701794E12, 5.0], [1.586701843E12, 5.0], [1.586701802E12, 5.0], [1.586701798E12, 5.0], [1.586701807E12, 5.0], [1.586701803E12, 5.0], [1.586701848E12, 5.0], [1.586701811E12, 5.0], [1.58670177E12, 6.0], [1.586701856E12, 5.0], [1.586701766E12, 33.0], [1.586701852E12, 5.0], [1.586701774E12, 5.0], [1.58670186E12, 5.0], [1.586701815E12, 5.0], [1.586701823E12, 5.0], [1.586701819E12, 5.0], [1.586701778E12, 5.0], [1.586701864E12, 5.0], [1.586701828E12, 5.0], [1.586701783E12, 5.0], [1.586701791E12, 5.0], [1.586701787E12, 5.0], [1.586701832E12, 5.0], [1.586701795E12, 5.0], [1.58670184E12, 5.0], [1.586701836E12, 5.0], [1.586701844E12, 5.0], [1.586701799E12, 5.0], [1.586701849E12, 5.0], [1.586701808E12, 5.0], [1.586701804E12, 5.0], [1.586701812E12, 5.0], [1.586701767E12, 6.0], [1.586701853E12, 5.0], [1.586701775E12, 5.0], [1.586701861E12, 5.0], [1.586701771E12, 6.0], [1.586701857E12, 5.0], [1.586701816E12, 5.0], [1.586701779E12, 5.0], [1.586701865E12, 5.0], [1.586701824E12, 5.0], [1.58670182E12, 5.0], [1.586701829E12, 5.0], [1.586701825E12, 5.0], [1.586701784E12, 5.0], [1.586701833E12, 5.0], [1.586701792E12, 5.0], [1.586701788E12, 5.0], [1.586701796E12, 5.0], [1.586701837E12, 5.0], [1.586701845E12, 5.0], [1.586701841E12, 5.0], [1.5867018E12, 5.0], [1.58670185E12, 5.0], [1.586701846E12, 5.0], [1.586701805E12, 5.0], [1.586701854E12, 5.0], [1.586701813E12, 5.0], [1.586701809E12, 5.0], [1.586701768E12, 6.0], [1.586701817E12, 5.0], [1.586701776E12, 5.0], [1.586701772E12, 6.0], [1.586701858E12, 5.0], [1.58670178E12, 5.0], [1.586701866E12, 5.0], [1.586701862E12, 5.0], [1.586701821E12, 5.0], [1.586701785E12, 5.0], [1.586701826E12, 5.0], [1.586701834E12, 5.0], [1.58670183E12, 5.0], [1.586701789E12, 5.0], [1.586701838E12, 5.0], [1.586701797E12, 5.0], [1.586701793E12, 5.0], [1.586701801E12, 5.0], [1.586701842E12, 5.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.586701866E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1000.0, "maxY": 3.0, "series": [{"data": [[1000.0, 3.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1000.0, "maxY": 3.0, "series": [{"data": [[1000.0, 3.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.586701766E12, "maxY": 186.0, "series": [{"data": [[1.586701806E12, 145.0], [1.586701847E12, 148.0], [1.586701769E12, 158.0], [1.586701855E12, 144.0], [1.586701851E12, 148.0], [1.58670181E12, 156.0], [1.586701859E12, 148.0], [1.586701818E12, 150.0], [1.586701814E12, 158.0], [1.586701773E12, 150.0], [1.586701822E12, 156.0], [1.586701781E12, 156.0], [1.586701777E12, 160.0], [1.586701863E12, 148.0], [1.586701827E12, 138.0], [1.586701786E12, 144.0], [1.586701782E12, 145.0], [1.58670179E12, 166.0], [1.586701831E12, 145.0], [1.586701839E12, 145.0], [1.586701835E12, 151.0], [1.586701794E12, 140.0], [1.586701843E12, 141.0], [1.586701802E12, 149.0], [1.586701798E12, 165.0], [1.586701807E12, 153.0], [1.586701803E12, 141.0], [1.586701848E12, 138.0], [1.586701811E12, 147.0], [1.58670177E12, 142.0], [1.586701856E12, 149.0], [1.586701766E12, 15.0], [1.586701852E12, 153.0], [1.586701774E12, 149.0], [1.58670186E12, 139.0], [1.586701815E12, 147.0], [1.586701823E12, 152.0], [1.586701819E12, 152.0], [1.586701778E12, 150.0], [1.586701864E12, 153.0], [1.586701828E12, 163.0], [1.586701783E12, 157.0], [1.586701791E12, 150.0], [1.586701787E12, 154.0], [1.586701832E12, 155.0], [1.586701795E12, 162.0], [1.58670184E12, 156.0], [1.586701836E12, 138.0], [1.586701844E12, 158.0], [1.586701799E12, 143.0], [1.586701849E12, 152.0], [1.586701808E12, 149.0], [1.586701804E12, 161.0], [1.586701812E12, 135.0], [1.586701767E12, 186.0], [1.586701853E12, 150.0], [1.586701775E12, 151.0], [1.586701861E12, 156.0], [1.586701771E12, 147.0], [1.586701857E12, 151.0], [1.586701816E12, 155.0], [1.586701779E12, 150.0], [1.586701865E12, 150.0], [1.586701824E12, 124.0], [1.58670182E12, 154.0], [1.586701829E12, 150.0], [1.586701825E12, 170.0], [1.586701784E12, 150.0], [1.586701833E12, 146.0], [1.586701792E12, 151.0], [1.586701788E12, 141.0], [1.586701796E12, 149.0], [1.586701837E12, 154.0], [1.586701845E12, 143.0], [1.586701841E12, 147.0], [1.5867018E12, 151.0], [1.58670185E12, 156.0], [1.586701846E12, 158.0], [1.586701805E12, 148.0], [1.586701854E12, 150.0], [1.586701813E12, 160.0], [1.586701809E12, 144.0], [1.586701768E12, 150.0], [1.586701817E12, 143.0], [1.586701776E12, 143.0], [1.586701772E12, 156.0], [1.586701858E12, 156.0], [1.58670178E12, 143.0], [1.586701866E12, 99.0], [1.586701862E12, 156.0], [1.586701821E12, 143.0], [1.586701785E12, 151.0], [1.586701826E12, 156.0], [1.586701834E12, 154.0], [1.58670183E12, 149.0], [1.586701789E12, 144.0], [1.586701838E12, 157.0], [1.586701797E12, 131.0], [1.586701793E12, 148.0], [1.586701801E12, 160.0], [1.586701842E12, 152.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.586701866E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.586701766E12, "maxY": 186.0, "series": [{"data": [[1.586701806E12, 144.0], [1.586701847E12, 148.0], [1.586701769E12, 159.0], [1.586701855E12, 144.0], [1.586701851E12, 148.0], [1.58670181E12, 156.0], [1.586701859E12, 148.0], [1.586701818E12, 150.0], [1.586701814E12, 158.0], [1.586701773E12, 151.0], [1.586701822E12, 156.0], [1.586701781E12, 156.0], [1.586701777E12, 159.0], [1.586701863E12, 148.0], [1.586701827E12, 138.0], [1.586701786E12, 144.0], [1.586701782E12, 145.0], [1.58670179E12, 166.0], [1.586701831E12, 145.0], [1.586701839E12, 145.0], [1.586701835E12, 151.0], [1.586701794E12, 140.0], [1.586701843E12, 141.0], [1.586701802E12, 149.0], [1.586701798E12, 165.0], [1.586701807E12, 153.0], [1.586701803E12, 141.0], [1.586701848E12, 138.0], [1.586701811E12, 147.0], [1.58670177E12, 141.0], [1.586701856E12, 149.0], [1.586701766E12, 14.0], [1.586701852E12, 153.0], [1.586701774E12, 148.0], [1.58670186E12, 139.0], [1.586701815E12, 147.0], [1.586701823E12, 152.0], [1.586701819E12, 152.0], [1.586701778E12, 150.0], [1.586701864E12, 153.0], [1.586701828E12, 163.0], [1.586701783E12, 157.0], [1.586701791E12, 150.0], [1.586701787E12, 154.0], [1.586701832E12, 156.0], [1.586701795E12, 163.0], [1.58670184E12, 156.0], [1.586701836E12, 138.0], [1.586701844E12, 158.0], [1.586701799E12, 144.0], [1.586701849E12, 152.0], [1.586701808E12, 149.0], [1.586701804E12, 161.0], [1.586701812E12, 135.0], [1.586701767E12, 186.0], [1.586701853E12, 150.0], [1.586701775E12, 151.0], [1.586701861E12, 156.0], [1.586701771E12, 147.0], [1.586701857E12, 151.0], [1.586701816E12, 155.0], [1.586701779E12, 150.0], [1.586701865E12, 150.0], [1.586701824E12, 124.0], [1.58670182E12, 154.0], [1.586701829E12, 150.0], [1.586701825E12, 170.0], [1.586701784E12, 150.0], [1.586701833E12, 145.0], [1.586701792E12, 151.0], [1.586701788E12, 141.0], [1.586701796E12, 148.0], [1.586701837E12, 154.0], [1.586701845E12, 143.0], [1.586701841E12, 147.0], [1.5867018E12, 150.0], [1.58670185E12, 156.0], [1.586701846E12, 158.0], [1.586701805E12, 149.0], [1.586701854E12, 150.0], [1.586701813E12, 160.0], [1.586701809E12, 144.0], [1.586701768E12, 150.0], [1.586701817E12, 143.0], [1.586701776E12, 144.0], [1.586701772E12, 156.0], [1.586701858E12, 156.0], [1.58670178E12, 143.0], [1.586701866E12, 100.0], [1.586701862E12, 156.0], [1.586701821E12, 143.0], [1.586701785E12, 151.0], [1.586701826E12, 156.0], [1.586701834E12, 154.0], [1.58670183E12, 149.0], [1.586701789E12, 144.0], [1.586701838E12, 157.0], [1.586701797E12, 131.0], [1.586701793E12, 148.0], [1.586701801E12, 160.0], [1.586701842E12, 152.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.586701866E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.586701766E12, "maxY": 124.0, "series": [{"data": [[1.586701806E12, 96.0], [1.586701847E12, 99.0], [1.586701769E12, 106.0], [1.586701855E12, 96.0], [1.586701851E12, 99.0], [1.58670181E12, 104.0], [1.586701859E12, 98.0], [1.586701818E12, 100.0], [1.586701814E12, 106.0], [1.586701773E12, 100.0], [1.586701822E12, 104.0], [1.586701781E12, 104.0], [1.586701777E12, 106.0], [1.586701863E12, 99.0], [1.586701827E12, 92.0], [1.586701786E12, 96.0], [1.586701782E12, 97.0], [1.58670179E12, 110.0], [1.586701831E12, 97.0], [1.586701839E12, 97.0], [1.586701835E12, 101.0], [1.586701794E12, 93.0], [1.586701843E12, 94.0], [1.586701802E12, 100.0], [1.586701798E12, 110.0], [1.586701807E12, 102.0], [1.586701803E12, 94.0], [1.586701848E12, 92.0], [1.586701811E12, 98.0], [1.58670177E12, 94.0], [1.586701856E12, 99.0], [1.586701766E12, 10.0], [1.586701852E12, 102.0], [1.586701774E12, 99.0], [1.58670186E12, 93.0], [1.586701815E12, 98.0], [1.586701823E12, 101.0], [1.586701819E12, 102.0], [1.586701778E12, 100.0], [1.586701864E12, 102.0], [1.586701828E12, 109.0], [1.586701783E12, 104.0], [1.586701791E12, 100.0], [1.586701787E12, 103.0], [1.586701832E12, 104.0], [1.586701795E12, 109.0], [1.58670184E12, 104.0], [1.586701836E12, 92.0], [1.586701844E12, 105.0], [1.586701799E12, 96.0], [1.586701849E12, 101.0], [1.586701808E12, 100.0], [1.586701804E12, 107.0], [1.586701812E12, 90.0], [1.586701767E12, 124.0], [1.586701853E12, 100.0], [1.586701775E12, 101.0], [1.586701861E12, 104.0], [1.586701771E12, 98.0], [1.586701857E12, 101.0], [1.586701816E12, 103.0], [1.586701779E12, 100.0], [1.586701865E12, 100.0], [1.586701824E12, 83.0], [1.58670182E12, 102.0], [1.586701829E12, 100.0], [1.586701825E12, 113.0], [1.586701784E12, 100.0], [1.586701833E12, 96.0], [1.586701792E12, 101.0], [1.586701788E12, 94.0], [1.586701796E12, 98.0], [1.586701837E12, 102.0], [1.586701845E12, 96.0], [1.586701841E12, 98.0], [1.5867018E12, 100.0], [1.58670185E12, 104.0], [1.586701846E12, 105.0], [1.586701805E12, 99.0], [1.586701854E12, 100.0], [1.586701813E12, 106.0], [1.586701809E12, 96.0], [1.586701768E12, 100.0], [1.586701817E12, 95.0], [1.586701776E12, 96.0], [1.586701772E12, 104.0], [1.586701858E12, 104.0], [1.58670178E12, 95.0], [1.586701866E12, 66.0], [1.586701862E12, 104.0], [1.586701821E12, 96.0], [1.586701785E12, 101.0], [1.586701826E12, 104.0], [1.586701834E12, 103.0], [1.58670183E12, 99.0], [1.586701789E12, 96.0], [1.586701838E12, 105.0], [1.586701797E12, 88.0], [1.586701793E12, 99.0], [1.586701801E12, 106.0], [1.586701842E12, 101.0]], "isOverall": false, "label": "http://localhost:8080/Login/LogOn-success", "isController": false}, {"data": [[1.586701806E12, 48.0], [1.586701847E12, 50.0], [1.586701769E12, 53.0], [1.586701855E12, 48.0], [1.586701851E12, 49.0], [1.58670181E12, 52.0], [1.586701859E12, 50.0], [1.586701818E12, 50.0], [1.586701814E12, 52.0], [1.586701773E12, 51.0], [1.586701822E12, 52.0], [1.586701781E12, 52.0], [1.586701777E12, 53.0], [1.586701863E12, 49.0], [1.586701827E12, 46.0], [1.586701786E12, 48.0], [1.586701782E12, 48.0], [1.58670179E12, 56.0], [1.586701831E12, 48.0], [1.586701839E12, 49.0], [1.586701835E12, 50.0], [1.586701794E12, 47.0], [1.586701843E12, 47.0], [1.586701802E12, 50.0], [1.586701798E12, 55.0], [1.586701807E12, 51.0], [1.586701803E12, 46.0], [1.586701848E12, 45.0], [1.586701811E12, 49.0], [1.58670177E12, 47.0], [1.586701856E12, 50.0], [1.586701766E12, 5.0], [1.586701852E12, 51.0], [1.586701774E12, 49.0], [1.58670186E12, 46.0], [1.586701815E12, 49.0], [1.586701823E12, 51.0], [1.586701819E12, 50.0], [1.586701778E12, 50.0], [1.586701864E12, 51.0], [1.586701828E12, 54.0], [1.586701783E12, 53.0], [1.586701791E12, 50.0], [1.586701787E12, 51.0], [1.586701832E12, 52.0], [1.586701795E12, 54.0], [1.58670184E12, 51.0], [1.586701836E12, 46.0], [1.586701844E12, 53.0], [1.586701799E12, 48.0], [1.586701849E12, 51.0], [1.586701808E12, 49.0], [1.586701804E12, 54.0], [1.586701812E12, 45.0], [1.586701767E12, 61.0], [1.586701853E12, 50.0], [1.586701775E12, 50.0], [1.586701861E12, 52.0], [1.586701771E12, 50.0], [1.586701857E12, 50.0], [1.586701816E12, 52.0], [1.586701779E12, 51.0], [1.586701865E12, 50.0], [1.586701824E12, 41.0], [1.58670182E12, 52.0], [1.586701829E12, 50.0], [1.586701825E12, 57.0], [1.586701784E12, 50.0], [1.586701833E12, 49.0], [1.586701792E12, 50.0], [1.586701788E12, 47.0], [1.586701796E12, 50.0], [1.586701837E12, 52.0], [1.586701845E12, 47.0], [1.586701841E12, 49.0], [1.5867018E12, 50.0], [1.58670185E12, 52.0], [1.586701846E12, 53.0], [1.586701805E12, 50.0], [1.586701854E12, 50.0], [1.586701813E12, 54.0], [1.586701809E12, 48.0], [1.586701768E12, 50.0], [1.586701817E12, 48.0], [1.586701776E12, 48.0], [1.586701772E12, 51.0], [1.586701858E12, 52.0], [1.58670178E12, 47.0], [1.586701866E12, 34.0], [1.586701862E12, 52.0], [1.586701821E12, 47.0], [1.586701785E12, 50.0], [1.586701826E12, 52.0], [1.586701834E12, 51.0], [1.58670183E12, 50.0], [1.586701789E12, 48.0], [1.586701838E12, 52.0], [1.586701797E12, 43.0], [1.586701793E12, 49.0], [1.586701801E12, 54.0], [1.586701842E12, 51.0]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.586701806E12, 48.0], [1.586701847E12, 49.0], [1.586701769E12, 53.0], [1.586701855E12, 48.0], [1.586701851E12, 49.0], [1.58670181E12, 52.0], [1.586701859E12, 50.0], [1.586701818E12, 50.0], [1.586701814E12, 52.0], [1.586701773E12, 51.0], [1.586701822E12, 52.0], [1.586701781E12, 52.0], [1.586701777E12, 53.0], [1.586701863E12, 49.0], [1.586701827E12, 46.0], [1.586701786E12, 48.0], [1.586701782E12, 48.0], [1.58670179E12, 56.0], [1.586701831E12, 48.0], [1.586701839E12, 48.0], [1.586701835E12, 50.0], [1.586701794E12, 47.0], [1.586701843E12, 47.0], [1.586701802E12, 49.0], [1.586701798E12, 55.0], [1.586701807E12, 51.0], [1.586701803E12, 47.0], [1.586701848E12, 46.0], [1.586701811E12, 49.0], [1.58670177E12, 47.0], [1.586701856E12, 50.0], [1.586701766E12, 4.0], [1.586701852E12, 51.0], [1.586701774E12, 49.0], [1.58670186E12, 46.0], [1.586701815E12, 49.0], [1.586701823E12, 51.0], [1.586701819E12, 50.0], [1.586701778E12, 50.0], [1.586701864E12, 51.0], [1.586701828E12, 54.0], [1.586701783E12, 53.0], [1.586701791E12, 50.0], [1.586701787E12, 51.0], [1.586701832E12, 52.0], [1.586701795E12, 54.0], [1.58670184E12, 52.0], [1.586701836E12, 46.0], [1.586701844E12, 53.0], [1.586701799E12, 48.0], [1.586701849E12, 51.0], [1.586701808E12, 49.0], [1.586701804E12, 54.0], [1.586701812E12, 45.0], [1.586701767E12, 62.0], [1.586701853E12, 50.0], [1.586701775E12, 50.0], [1.586701861E12, 52.0], [1.586701771E12, 49.0], [1.586701857E12, 50.0], [1.586701816E12, 52.0], [1.586701779E12, 50.0], [1.586701865E12, 50.0], [1.586701824E12, 41.0], [1.58670182E12, 52.0], [1.586701829E12, 50.0], [1.586701825E12, 57.0], [1.586701784E12, 50.0], [1.586701833E12, 49.0], [1.586701792E12, 50.0], [1.586701788E12, 47.0], [1.586701796E12, 50.0], [1.586701837E12, 52.0], [1.586701845E12, 47.0], [1.586701841E12, 49.0], [1.5867018E12, 50.0], [1.58670185E12, 52.0], [1.586701846E12, 53.0], [1.586701805E12, 50.0], [1.586701854E12, 50.0], [1.586701813E12, 54.0], [1.586701809E12, 48.0], [1.586701768E12, 50.0], [1.586701817E12, 48.0], [1.586701776E12, 48.0], [1.586701772E12, 52.0], [1.586701858E12, 52.0], [1.58670178E12, 48.0], [1.586701866E12, 34.0], [1.586701862E12, 52.0], [1.586701821E12, 47.0], [1.586701785E12, 50.0], [1.586701826E12, 52.0], [1.586701834E12, 51.0], [1.58670183E12, 50.0], [1.586701789E12, 48.0], [1.586701838E12, 52.0], [1.586701797E12, 43.0], [1.586701793E12, 49.0], [1.586701801E12, 54.0], [1.586701842E12, 51.0]], "isOverall": false, "label": "http://localhost:8080/Device/Search-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.586701866E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.586701766E12, "maxY": 247.0, "series": [{"data": [[1.586701806E12, 192.0], [1.586701847E12, 198.0], [1.586701769E12, 212.0], [1.586701855E12, 192.0], [1.586701851E12, 197.0], [1.58670181E12, 208.0], [1.586701859E12, 198.0], [1.586701818E12, 200.0], [1.586701814E12, 210.0], [1.586701773E12, 202.0], [1.586701822E12, 208.0], [1.586701781E12, 208.0], [1.586701777E12, 212.0], [1.586701863E12, 197.0], [1.586701827E12, 184.0], [1.586701786E12, 192.0], [1.586701782E12, 193.0], [1.58670179E12, 222.0], [1.586701831E12, 193.0], [1.586701839E12, 194.0], [1.586701835E12, 201.0], [1.586701794E12, 187.0], [1.586701843E12, 188.0], [1.586701802E12, 199.0], [1.586701798E12, 220.0], [1.586701807E12, 204.0], [1.586701803E12, 187.0], [1.586701848E12, 183.0], [1.586701811E12, 196.0], [1.58670177E12, 188.0], [1.586701856E12, 199.0], [1.586701766E12, 19.0], [1.586701852E12, 204.0], [1.586701774E12, 197.0], [1.58670186E12, 185.0], [1.586701815E12, 196.0], [1.586701823E12, 203.0], [1.586701819E12, 202.0], [1.586701778E12, 200.0], [1.586701864E12, 204.0], [1.586701828E12, 217.0], [1.586701783E12, 210.0], [1.586701791E12, 200.0], [1.586701787E12, 205.0], [1.586701832E12, 208.0], [1.586701795E12, 217.0], [1.58670184E12, 207.0], [1.586701836E12, 184.0], [1.586701844E12, 211.0], [1.586701799E12, 192.0], [1.586701849E12, 203.0], [1.586701808E12, 198.0], [1.586701804E12, 215.0], [1.586701812E12, 180.0], [1.586701767E12, 247.0], [1.586701853E12, 200.0], [1.586701775E12, 201.0], [1.586701861E12, 208.0], [1.586701771E12, 197.0], [1.586701857E12, 201.0], [1.586701816E12, 207.0], [1.586701779E12, 201.0], [1.586701865E12, 200.0], [1.586701824E12, 165.0], [1.58670182E12, 206.0], [1.586701829E12, 200.0], [1.586701825E12, 227.0], [1.586701784E12, 200.0], [1.586701833E12, 194.0], [1.586701792E12, 201.0], [1.586701788E12, 188.0], [1.586701796E12, 198.0], [1.586701837E12, 206.0], [1.586701845E12, 190.0], [1.586701841E12, 196.0], [1.5867018E12, 200.0], [1.58670185E12, 208.0], [1.586701846E12, 211.0], [1.586701805E12, 199.0], [1.586701854E12, 200.0], [1.586701813E12, 214.0], [1.586701809E12, 192.0], [1.586701768E12, 200.0], [1.586701817E12, 191.0], [1.586701776E12, 192.0], [1.586701772E12, 207.0], [1.586701858E12, 208.0], [1.58670178E12, 190.0], [1.586701866E12, 134.0], [1.586701862E12, 208.0], [1.586701821E12, 190.0], [1.586701785E12, 201.0], [1.586701826E12, 208.0], [1.586701834E12, 205.0], [1.58670183E12, 199.0], [1.586701789E12, 192.0], [1.586701838E12, 209.0], [1.586701797E12, 174.0], [1.586701793E12, 197.0], [1.586701801E12, 214.0], [1.586701842E12, 203.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.586701866E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

